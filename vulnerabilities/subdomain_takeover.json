{
  "description": "Subdomain Takeover Cases (src: HackerOne)",
  "vulnerability_type": "subdomain_takeover",
  "total_cases": 167,
  "cases": [
    {
      "vulnerable_domain": "api.legalrobot.com",
      "service_type": "Modulus.io",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "The subdomain api.legalrobot.com was pointed via DNS to Modulus.io, but no application was deployed on Modulus for that domain, resulting in a dangling DNS entry. The attacker created an account on Modulus.io and claimed the wildcard domain *.legalrobot.com, thereby gaining control over api.legalrobot.com and serving arbitrary content.",
      "poc_steps": [
        "Checked api.legalrobot.com and observed the 'NO APPLICATION WAS FOUND FOR api.legalrobot.com' message from Modulus.io.",
        "Created a new account on Modulus.io.",
        "Attempted to add the specific domain api.legalrobot.com but was informed it was already added elsewhere.",
        "Added the wildcard domain *.legalrobot.com successfully to Modulus.io.",
        "Deployed a simple 'Hello World!' application on Modulus.io under the wildcard domain.",
        "Accessed https://api.legalrobot.com and confirmed the attacker's content was served."
      ],
      "verification_method": "Accessed https://api.legalrobot.com and received the attacker's custom content 'Hello World!<!--FRANS ROSEN-->' in the HTTP response body, confirming control over the subdomain. Screenshots were provided showing the Modulus.io interface and the served content."
    },
    {
      "vulnerable_domain": "brand.zen.ly",
      "service_type": "Brandpad",
      "dns_record_type": "CNAME-based",
      "cname_record": "brand.zen.ly. 255 IN CNAME brandpad.io.",
      "takeover_method": "The subdomain brand.zen.ly was pointing via a CNAME record to brandpad.io, a service that allows users to register and claim custom domains. The attacker registered an account on Brandpad and added brand.zen.ly as a custom domain, thereby taking over the subdomain.",
      "poc_steps": [
        "Run DNS query: dig brand.zen.ly to confirm CNAME points to brandpad.io",
        "Visit https://brand.zen.ly and observe 'Not Found' error",
        "Register an account on Brandpad service",
        "Add brand.zen.ly as a custom domain in Brandpad account",
        "Access https://brand.zen.ly and confirm control over the subdomain"
      ],
      "verification_method": "Accessed https://brand.zen.ly and confirmed the domain was serving content controlled via Brandpad after registering and adding the domain, demonstrating successful takeover."
    },
    {
      "vulnerable_domain": "datacafe-cert.starbucks.com",
      "service_type": "Azure",
      "dns_record_type": "CNAME-based",
      "cname_record": "datacafe-cert.starbucks.com CNAME s00397nasv101-datacafe-cert.azurewebsites.net",
      "takeover_method": "The subdomain had a dangling CNAME record pointing to an unclaimed Azure webservice domain. The attacker registered the Azure webservice with the target name, thereby gaining full control over the subdomain datacafe-cert.starbucks.com.",
      "poc_steps": [
        "Enumerate subdomains of starbucks.com",
        "Check each subdomain for CNAME records pointing to azurewebsites.net",
        "Perform DNS query for the CNAME target domain",
        "Identify if the CNAME target returns NXDOMAIN (unclaimed)",
        "Register the unclaimed Azure webservice domain matching the CNAME target",
        "Serve arbitrary content on the registered Azure webservice",
        "Access datacafe-cert.starbucks.com to confirm control over the subdomain"
      ],
      "verification_method": "Registered the unclaimed Azure webservice domain s00397nasv101-datacafe-cert.azurewebsites.net and confirmed that arbitrary content could be served on datacafe-cert.starbucks.com, demonstrating full control over the subdomain."
    },
    {
      "vulnerable_domain": "info.hacker.one",
      "service_type": "Unbounce Pages",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "The attacker claimed the subdomain by creating a new page in the Unbounce Pages app under the vulnerable endpoint, modifying the page's domain parameter to point to any domain they control, effectively allowing full takeover of the subdomain.",
      "poc_steps": [
        "Claim the domain info.hacker.one and create a new page for PoC validation at http://info.hacker.one/full-takeover/",
        "Observe the alert box indicating subdomain takeover on the page",
        "Login to Unbounce account",
        "Create a new page under any domain",
        "Go to 'Edit Notes' section of the page",
        "Fill any input in the notes",
        "Intercept the HTTP request with a proxy tool like Burp Suite",
        "Modify the POST request body parameters to include &page[description]=test&page[domain]=anydomain.com",
        "Refresh the page to see the new claimed domain reflected in the URL"
      ],
      "verification_method": "Verification was done by accessing the subdomain URL (http://info.hacker.one/full-takeover/) and observing an alert box indicating takeover, supported by screenshots showing the new claimed domain in the URL and the successful update of the page domain parameter via intercepted POST requests."
    },
    {
      "vulnerable_domain": "badootech.badoo.com",
      "service_type": "Medium",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "The subdomain badootech.badoo.com was pointing to Medium servers, allowing an attacker to take over the subdomain by claiming the Medium blog associated with that subdomain, enabling control over the content served on that domain.",
      "poc_steps": null,
      "verification_method": "Confirmed by accessing the subdomain and observing a redirect to the official Medium blog https://medium.com/bumble-tech, indicating the takeover was fixed. A screenshot was attached as evidence."
    },
    {
      "vulnerable_domain": null,
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Subdomain takeover due to a dangling DNS record under mozaws.net, where the DNS record pointed to an unclaimed resource that was registered by the researcher, allowing hosting of arbitrary content under the subdomain.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": null,
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Subdomain takeover was achieved by registering a dangling DNS record under mozaws.net that was not claimed by Mozilla, allowing researchers to host content under the subdomain.",
      "poc_steps": [
        "Identify dangling DNS record under mozaws.net associated with Mozilla asset",
        "Register the DNS record to claim the subdomain",
        "Host content under the claimed subdomain",
        "Access the subdomain to confirm content is served"
      ],
      "verification_method": "Researchers accessed the subdomain after registering the dangling DNS record and confirmed they could serve content under it, demonstrating control over the subdomain."
    },
    {
      "vulnerable_domain": "saostatic.uber.com",
      "service_type": "AWS Cloudfront CDN",
      "dns_record_type": "CNAME-based",
      "cname_record": "saostatic.uber.com CNAME pointing to AWS Cloudfront CDN server",
      "takeover_method": "The subdomain saostatic.uber.com was pointing to an AWS Cloudfront CDN hostname that was no longer registered or controlled by Uber, allowing the attacker to fully takeover the domain by serving content from their own webserver over HTTP and HTTPS.",
      "poc_steps": [
        "Identify that saostatic.uber.com is a CNAME to an AWS Cloudfront CDN hostname no longer registered by Uber",
        "Register or claim the dangling Cloudfront hostname to serve content from attacker's own webserver",
        "Serve malicious content over HTTP and HTTPS on saostatic.uber.com",
        "Exploit shared SSO cookies scoped to .uber.com to hijack authentication sessions"
      ],
      "verification_method": "Accessed saostatic.uber.com over HTTPS and HTTP to confirm content served from attacker's server; confirmed that .uber.com scoped SSO cookies were accessible and could be leaked to the overtaken subdomain, enabling authentication bypass."
    },
    {
      "vulnerable_domain": "[REDACTED].mil",
      "service_type": "GoDaddy domain service",
      "dns_record_type": "CNAME-based",
      "cname_record": "[REDACTED].mil. 3600 IN CNAME peosol-lg.[REDACTED].",
      "takeover_method": "The subdomain pointed via a CNAME record to a target domain (peosol-lg.[REDACTED]) that was unclaimed or expired on GoDaddy, allowing an attacker to register the target domain and serve content under the original subdomain.",
      "poc_steps": [
        "Run 'dig [REDACTED].mil' to observe DNS records and confirm CNAME pointing to peosol-lg.[REDACTED].",
        "Check GoDaddy domain availability page for peosol-lg.[REDACTED] to confirm it is unregistered or available.",
        "Verify WHOIS information for the parent domain and authoritative nameservers.",
        "Register or claim the target domain peosol-lg.[REDACTED] on GoDaddy to control the subdomain content."
      ],
      "verification_method": "DNS query (dig) showed the subdomain resolving to a CNAME pointing to an unclaimed domain on GoDaddy; domain availability check on GoDaddy confirmed the target domain was available for registration, indicating potential for takeover."
    },
    {
      "vulnerable_domain": null,
      "service_type": "Google services (GMAIL, Calendar, G-Drive, etc.)",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Subdomain takeover was possible by exploiting dangling DNS entries pointing to Google services, which compromises the use of those services on the affected subdomains.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": "moderator.ubnt.com",
      "service_type": null,
      "dns_record_type": "CNAME-based",
      "cname_record": null,
      "takeover_method": "The attacker claimed the abandoned subdomain by registering it to their own account, thereby fully taking over the subdomain and gaining control over it. This was possible because the subdomain was pointing via a CNAME record to an unclaimed or abandoned service, allowing the attacker to register the target service and serve content on the subdomain.",
      "poc_steps": [
        "Identify that moderator.ubnt.com is an abandoned subdomain pointing to an unclaimed service.",
        "Request the process to register the abandoned subdomain to the attacker's name on the target service.",
        "Successfully claim the subdomain by associating it with the attacker's account.",
        "Demonstrate control over the subdomain by serving content or performing actions under that domain."
      ],
      "verification_method": "Proof of concept was demonstrated via two videos: one showing the initial claim of the subdomain (https://youtu.be/51Ku4cGbijE) and another showing a second attempt to claim it (https://youtu.be/GJcWsHJj8aE). Additionally, screenshots were attached as evidence. The attacker confirmed takeover by accessing the subdomain and showing control over it."
    },
    {
      "vulnerable_domain": "www[REDACTED].affirm.com",
      "service_type": "AWS S3",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "The subdomain www[REDACTED].affirm.com pointed to a non-existent AWS S3 bucket (affirm-prod-www-cms[REDACTED]). The attacker was able to create and control this S3 bucket, upload arbitrary content, and serve it via the subdomain, effectively taking over the subdomain.",
      "poc_steps": [
        "Performed a curl request to https://www[REDACTED].affirm.com and observed a PermanentRedirect XML response indicating the bucket name affirm-prod-www-cms[REDACTED].",
        "Accessed https://s3.amazonaws.com/affirm-prod-www-cms[REDACTED]/index.html to confirm control by retrieving attacker-controlled content.",
        "Uploaded custom content to the S3 bucket affirm-prod-www-cms[REDACTED] to demonstrate control.",
        "Obtained TLS certificate for the domain to show full takeover capability."
      ],
      "verification_method": "Verified by sending HTTP requests to the vulnerable subdomain and the associated S3 bucket URL, observing redirect errors due to region mismatch, and confirming attacker-controlled content was served from the S3 bucket at the domain."
    },
    {
      "vulnerable_domain": "[REDACTED]",
      "service_type": "AWS S3",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Claimed the unclaimed Amazon S3 bucket that the subdomain pointed to, which no longer existed, thereby taking control of the subdomain by hosting content on the newly claimed S3 bucket.",
      "poc_steps": [
        "Performed DNS lookup using dig command on the vulnerable subdomain",
        "Identified that the subdomain pointed to a non-existent Amazon S3 website bucket in the US East region",
        "Created and claimed the missing S3 bucket with the exact name",
        "Hosted content on the claimed S3 bucket to take over the subdomain"
      ],
      "verification_method": "Confirmed takeover by successfully hosting content on the claimed S3 bucket linked to the subdomain, demonstrating full control over the subdomain."
    },
    {
      "vulnerable_domain": "[REDACTED].[REDACTED].[REDACTED].com",
      "service_type": null,
      "dns_record_type": "CNAME-based",
      "cname_record": "[REDACTED].[REDACTED].[REDACTED].com CNAME [REDACTED].[REDACTED]",
      "takeover_method": "The subdomain pointed via a CNAME record to a non-registered top-level domain (TLD). An attacker can register the unregistered TLD and create the corresponding domain and subdomain to serve content on the vulnerable subdomain, effectively taking it over.",
      "poc_steps": [
        "Identify the vulnerable subdomain with a CNAME record pointing to a non-registered TLD.",
        "Register the unregistered TLD domain externally.",
        "Create the subdomain matching the CNAME target.",
        "Serve content on the created subdomain to hijack the original vulnerable subdomain."
      ],
      "verification_method": "Performed DNS query (dig) on the vulnerable subdomain and confirmed the CNAME record pointed to the unregistered TLD. After remediation, verified the DNS record was updated to an internal IP address (A record) indicating the takeover vector was closed."
    },
    {
      "vulnerable_domain": "www.jet.acronis.com",
      "service_type": "Webflow",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Registering a Webflow account, upgrading to a paid plan to enable custom domain setup, then adding the vulnerable subdomain (www.jet.acronis.com) as a custom domain in Webflow hosting settings, allowing the attacker to serve content on the unclaimed subdomain.",
      "poc_steps": [
        "Create a Webflow account",
        "Upgrade to the basic paid option to enable custom domain setup",
        "Create a new site in Webflow",
        "Go to Project Settings > Hosting",
        "Scroll down to the custom domains section",
        "Add www.jet.acronis.com as a custom domain to the site"
      ],
      "verification_method": "Screenshots were provided showing the error page and proof of concept (2020-08-08_www.jet.acronis.com_error.jpg and 2020-08-08_www.jet.acronis.com_poc.jpg), demonstrating control over the subdomain via Webflow hosting."
    },
    {
      "vulnerable_domain": "blog.snapchat.com",
      "service_type": "Tumblr",
      "dns_record_type": "ANAME-based",
      "cname_record": null,
      "takeover_method": "The ANAME record for blog.snapchat.com pointed to snapchat-blog.com, which was configured as a custom domain on Tumblr. Since the Tumblr blog had expired or removed the CNAME claim, adding snapchat-blog.com to the custom domain setting on Tumblr allowed takeover of the subdomain.",
      "poc_steps": [
        "Identify that blog.snapchat.com ANAME points to snapchat-blog.com",
        "Verify that the Tumblr blog at snapchat-blog.com had expired or removed the CNAME claim",
        "Add snapchat-blog.com as a custom domain in Tumblr settings",
        "Confirm that Tumblr serves content for blog.snapchat.com"
      ],
      "verification_method": "Confirmed takeover by accessing blog.snapchat.com and verifying that Tumblr served content for the subdomain after adding snapchat-blog.com as a custom domain"
    },
    {
      "vulnerable_domain": "api.e2e-kops-aws-canary.test-cncf-aws.canary.k8s.io",
      "service_type": "Amazon Route 53",
      "dns_record_type": "NS-based",
      "cname_record": null,
      "takeover_method": "Exploiting dangling NS records on Amazon Route 53 by registering the subdomain's name servers under attacker's control, allowing the attacker to serve content and receive emails for the subdomain.",
      "poc_steps": [
        "Identify dangling NS records pointing to name servers not controlled by the domain owner.",
        "Register the subdomain's name servers on AWS Route 53 under attacker's control.",
        "Configure the hosted zone to serve content at the vulnerable subdomain.",
        "Demonstrate control by sending and receiving emails at the subdomain's email addresses.",
        "Access the subdomain URL to confirm content is served by attacker.",
        "Provide POC URL: http://api.e2e-kops-aws-canary.test-cncf-aws.canary.k8s.io",
        "Provide POC video archive link: https://web.archive.org/web/20191125154616/http://api.e2e-kops-aws-canary.test-cncf-aws.canary.k8s.io/"
      ],
      "verification_method": "Accessed the vulnerable subdomain URL and confirmed attacker-controlled content was served; demonstrated ability to send and receive emails at the subdomain's email addresses; provided proof of concept URL and archived video showing control."
    },
    {
      "vulnerable_domain": "█.easycontactnow.com",
      "service_type": "Zendesk",
      "dns_record_type": "CNAME-based",
      "cname_record": null,
      "takeover_method": "The subdomain's CNAME record pointed to an abandoned Zendesk instance outside of 8x8's control, allowing potential takeover by claiming the abandoned service.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": "tim-exclusive.shopify.com",
      "service_type": "Heroku",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "The subdomain was pointing to an unclaimed Heroku instance, allowing an attacker to claim the Heroku app and gain control over the subdomain.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": null,
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Subdomain takeover due to a dangling DNS record under mozaws.net, where the DNS record pointed to an unclaimed resource that was registered by the researcher, allowing hosting of content under the subdomain.",
      "poc_steps": null,
      "verification_method": "Researchers registered the dangling DNS record and were able to host content under the subdomain, confirming control and successful takeover."
    },
    {
      "vulnerable_domain": "███.wavecell.com",
      "service_type": "AWS S3",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "An S3 bucket was deleted, but a DNS record pointing to the bucket was not updated or removed, allowing potential subdomain takeover.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": [
        "translate.uber.com",
        "fr.uber.com",
        "de.uber.com"
      ],
      "service_type": null,
      "dns_record_type": "CNAME-based",
      "cname_record": null,
      "takeover_method": "Subdomains were pointing to a CNAME for a site that was not claimed. The attacker claimed the target site and was able to add any content, effectively taking over the subdomain.",
      "poc_steps": [
        "Identify subdomains (translate.uber.com, fr.uber.com, de.uber.com) pointing to unclaimed CNAME targets.",
        "Claim the unclaimed target site associated with the CNAME record.",
        "Add custom content to the claimed site.",
        "Access the subdomains to verify that the added content is served."
      ],
      "verification_method": "Accessed the subdomains (e.g., translate.uber.com and de.uber.com) and confirmed that the attacker's blog content was served, demonstrating control over the subdomain."
    },
    {
      "vulnerable_domain": "developer.openapi.starbucks.com",
      "service_type": "Mashery",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Registered a trial account on Mashery, then added the vulnerable subdomain developer.openapi.starbucks.com as a custom domain in Mashery's portal settings, allowing serving custom content on that subdomain without verification or error.",
      "poc_steps": [
        "Discovered developer.openapi.starbucks.com returns HTTP 200 with Server header 'Mashery Proxy'.",
        "Registered a trial account at https://www.mashery.com/ and confirmed the account.",
        "Accessed the Mashery dashboard and navigated to Portal Settings.",
        "Added developer.openapi.starbucks.com as a custom domain without receiving any error.",
        "Visited http://developer.openapi.starbucks.com/ and saw the Mashery welcome page.",
        "Injected simple JavaScript code (alert(document.domain)) into the welcome page as proof of concept.",
        "Confirmed the script executed by visiting the subdomain URL."
      ],
      "verification_method": "Accessed http://developer.openapi.starbucks.com/ after adding the domain in Mashery dashboard and observed the Mashery welcome page served with custom injected JavaScript alert(document.domain), confirming control over the subdomain content."
    },
    {
      "vulnerable_domain": "blog.owox.com",
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": null,
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": "[REDACTED]",
      "service_type": "Azure",
      "dns_record_type": "CNAME-based",
      "cname_record": "[REDACTED] --> [REDACTED]",
      "takeover_method": "The subdomain pointed via a CNAME record to an unclaimed domain on Azure. The attacker claimed the unclaimed Azure domain and hosted a proof-of-concept file, effectively taking over the subdomain.",
      "poc_steps": [
        "Identify subdomain pointing via CNAME to unclaimed Azure domain",
        "Claim the unclaimed Azure domain",
        "Host a proof-of-concept file at an obscure URL on the claimed domain",
        "Access the proof-of-concept URL via the vulnerable subdomain to confirm takeover"
      ],
      "verification_method": "Visited the proof-of-concept URL (https://[REDACTED]/proof.e7437329-ab61-4f22-a049-df5b3685313a.txt) via the vulnerable subdomain and confirmed the hosted file was served, demonstrating control over the subdomain."
    },
    {
      "vulnerable_domain": "blog.greenhouse.io",
      "service_type": "Hubspot",
      "dns_record_type": "CNAME-based",
      "cname_record": "blog.greenhouse.io is an alias for san.secure001.hubspot.com.edgekey.net.",
      "takeover_method": "The subdomain blog.greenhouse.io pointed via a CNAME record to Hubspot, but the Hubspot account was expired or cancelled. This allowed an attacker to claim the subdomain on Hubspot and serve arbitrary content, effectively taking over the subdomain.",
      "poc_steps": [
        "Query DNS for blog.greenhouse.io to confirm it is a CNAME pointing to Hubspot domains.",
        "Claim the expired/cancelled Hubspot account associated with the subdomain.",
        "Deploy arbitrary content on the claimed Hubspot subdomain.",
        "Access http://blog.greenhouse.io/ to verify control over the subdomain."
      ],
      "verification_method": "The attacker temporarily claimed the domain on Hubspot and demonstrated the ability to run JavaScript and serve arbitrary content on blog.greenhouse.io. Screenshots were provided as proof of concept, and the domain resolved to attacker-controlled content."
    },
    {
      "vulnerable_domain": [
        "bugs.instacart.com",
        "atlas.instacart.com"
      ],
      "service_type": "Heroku",
      "dns_record_type": "CNAME-based",
      "cname_record": [
        "bugs.instacart.com canonical name = akita-7862.herokussl.com.",
        "akita-7862.herokussl.com canonical name = elb070827-1683851829.us-east-1.elb.amazonaws.com.",
        "atlas.instacart.com canonical name = tochigi-6557.herokussl.com.",
        "tochigi-6557.herokussl.com canonical name = elb070826-1853155728.us-east-1.elb.amazonaws.com."
      ],
      "takeover_method": "Subdomains pointed via CNAME DNS records to Heroku apps that were unconfigured or non-existent, allowing an attacker to claim the Heroku app and take over the subdomain.",
      "poc_steps": [
        "Perform nslookup on the subdomains bugs.instacart.com and atlas.instacart.com to identify their CNAME targets pointing to Heroku domains.",
        "Verify that the Heroku apps (akita-7862 and tochigi-6557) are unconfigured or do not exist by accessing the hostname and observing the 'no app configured at that hostname' message.",
        "Demonstrate that the DNS entries still point to these unclaimed Heroku apps, indicating potential for takeover."
      ],
      "verification_method": "Used nslookup to confirm subdomains point to unconfigured Heroku apps; accessed the subdomain URLs and observed the Heroku default message indicating no app configured; attached screenshots showing this behavior."
    },
    {
      "vulnerable_domain": "http://██.get8x8.com/",
      "service_type": "Netlify",
      "dns_record_type": "CNAME-based",
      "cname_record": null,
      "takeover_method": "Subdomain takeover was achievable due to a misconfiguration of a Netlify target, allowing an attacker to claim the dangling CNAME and serve content on the subdomain.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": null,
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Subdomain takeover due to a dangling DNS record under mozaws.net, allowing researchers to register the record and host content under the subdomain.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": "ux.shopify.com",
      "service_type": "Tumblr",
      "dns_record_type": "CNAME-based",
      "cname_record": "ux.shopify.com. 3600 IN CNAME domains.tumblr.com.",
      "takeover_method": "The subdomain ux.shopify.com was pointing via a CNAME record to domains.tumblr.com, but the subdomain was not claimed by any Tumblr user. An attacker could register a Tumblr blog using this subdomain, effectively taking over the subdomain and serving content on it.",
      "poc_steps": [
        "Identify that ux.shopify.com CNAME points to domains.tumblr.com",
        "Confirm that no Tumblr user had claimed the ux.shopify.com subdomain",
        "Register a Tumblr blog using the ux.shopify.com subdomain",
        "Configure the blog to be password protected with password 'c7gBX6gELPFLhYOeYxQD'",
        "Access http://ux.shopify.com/ to verify control over the subdomain"
      ],
      "verification_method": "Accessed the URL http://ux.shopify.com/ after registering the Tumblr blog and confirmed that the attacker-controlled content was served on the subdomain. Screenshots were provided as evidence."
    },
    {
      "vulnerable_domain": "hacker.one",
      "service_type": "Instapage",
      "dns_record_type": "CNAME-based",
      "cname_record": null,
      "takeover_method": "The subdomain takeover was achieved by exploiting a 0day issue in Instapage where the hacker was able to claim the subdomain via a CNAME pointing to Instapage, allowing them to serve arbitrary content on the official hacker.one domain.",
      "poc_steps": [
        "Visit https://www.hacker.one",
        "Observe HTML content updated by the attacker, demonstrating control over the domain"
      ],
      "verification_method": "Accessed the https://www.hacker.one URL and confirmed that the HTML content was modified by the attacker, proving control over the domain."
    },
    {
      "vulnerable_domain": "[REDACTED]",
      "service_type": "[REDACTED]",
      "dns_record_type": "CNAME-based",
      "cname_record": "[REDACTED] CNAME [REDACTED].[REDACTED]",
      "takeover_method": "The subdomain had a dangling CNAME record pointing to an unclaimed service on [REDACTED]. The attacker registered the corresponding service on [REDACTED] platform, added the vulnerable subdomain as a custom domain in their account, and thereby gained full control over the subdomain's content.",
      "poc_steps": [
        "Open [REDACTED] and register for the web app under marketplace.",
        "Go to Custom Domains under settings.",
        "Add the vulnerable subdomain [REDACTED] as a custom domain.",
        "Upload a proof of concept payload to the service.",
        "Access the subdomain to confirm control."
      ],
      "verification_method": "Uploaded a simple subdomain takeover proof of concept to http://[REDACTED]/[REDACTED] and accessed the vulnerable subdomain to confirm that the attacker-controlled content was served."
    },
    {
      "vulnerable_domain": "status0.stripo.email",
      "service_type": "UptimeRobot",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "The subdomain was pointing to a service on uptimerobot.com that was not properly claimed or verified, allowing an attacker to use the subdomain to display false messages via UptimeRobot's public page feature.",
      "poc_steps": [
        "Identify that status0.stripo.email is configured to point to a resource on uptimerobot.com.",
        "Create a public page on uptimerobot.com using the subdomain status0.stripo.email.",
        "Serve a false message on the subdomain via the UptimeRobot public page.",
        "Verify that the false message is accessible through the vulnerable subdomain."
      ],
      "verification_method": "Accessed the subdomain status0.stripo.email and confirmed that a false message controlled by the attacker was served via UptimeRobot's public page, supported by screenshots (sub.bmp and cname.bmp)."
    },
    {
      "vulnerable_domain": "assets.goubiquiti.com",
      "service_type": "AWS S3",
      "dns_record_type": "CNAME-based",
      "cname_record": "assets.goubiquiti.com CNAME uwn-images.s3-website-us-west-1.amazonaws.com",
      "takeover_method": "The subdomain assets.goubiquiti.com points via a CNAME DNS record to an AWS S3 bucket that does not exist or is not configured. Because the S3 bucket with the same name as the subdomain is absent, an attacker can create an S3 bucket with that name and claim the subdomain, thereby fully taking over it and serving arbitrary content.",
      "poc_steps": [
        "Identify that assets.goubiquiti.com is a CNAME pointing to an AWS S3 website endpoint (uwn-images.s3-website-us-west-1.amazonaws.com).",
        "Verify that no S3 bucket or website configuration exists for assets.goubiquiti.com.",
        "Create an AWS S3 bucket named assets.goubiquiti.com.",
        "Configure the bucket for static website hosting to serve content.",
        "Access http://assets.goubiquiti.com and confirm that the content served is from the attacker's bucket."
      ],
      "verification_method": "Checked DNS records showing assets.goubiquiti.com CNAME to an S3 website endpoint. Verified absence of corresponding S3 bucket configuration. Proof of concept attachments (screenshots) were provided showing the DNS CNAME and the error due to missing bucket. The attacker demonstrated that by creating the bucket, they could serve content on the subdomain."
    },
    {
      "vulnerable_domain": null,
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Subdomain takeover due to a dangling DNS record under mozaws.net, allowing the researcher to register the record and host content under the subdomain.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": "vex.weather.com",
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Improper Authentication allowed takeover of the subdomain, enabling control over vex.weather.com",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": "registry.nodejs.org",
      "service_type": "Fastly",
      "dns_record_type": "CNAME-based",
      "cname_record": "registry.nodejs.org is a CNAME record that points to registry.npmjs.org",
      "takeover_method": "The subdomain registry.nodejs.org was a CNAME pointing to registry.npmjs.org, which in turn pointed to a.sni.fastly.net. Fastly was configured to serve registry.npmjs.org but not registry.nodejs.org. The attacker created a Fastly service configured to listen for registry.nodejs.org, causing requests to that subdomain to be routed to the attacker's service instead of the legitimate one.",
      "poc_steps": [
        "Identify that registry.nodejs.org is a CNAME to registry.npmjs.org",
        "Confirm that registry.npmjs.org is a CNAME to a.sni.fastly.net",
        "Note that Fastly is configured to serve registry.npmjs.org but not registry.nodejs.org",
        "Create a Fastly service configured to listen for registry.nodejs.org",
        "Route requests for registry.nodejs.org to the attacker's Fastly service",
        "Visit registry.nodejs.org and observe the attacker's custom HTML comment \"<!--You probably meant registry.npmjs.org-->\""
      ],
      "verification_method": "Accessed registry.nodejs.org in a browser and confirmed the presence of the attacker's HTML comment \"<!--You probably meant registry.npmjs.org-->\" at the top of the page, indicating that requests were routed to the attacker's Fastly service instead of the legitimate registry.npmjs.org."
    },
    {
      "vulnerable_domain": "engineering.zomato.com",
      "service_type": "Tumblr",
      "dns_record_type": "CNAME-based",
      "cname_record": "engineering.zomato.com canonical name = domains.tumblr.com.",
      "takeover_method": "The subdomain engineering.zomato.com was pointing via a CNAME DNS record to domains.tumblr.com, an external service. Since the domain was not claimed or controlled by the target organization, an attacker could claim the Tumblr domain and serve content on the subdomain, resulting in a subdomain takeover.",
      "poc_steps": [
        "Performed nslookup on engineering.zomato.com",
        "Observed that engineering.zomato.com is a CNAME to domains.tumblr.com",
        "Noted that domains.tumblr.com resolves to IP addresses 66.6.42.22 and 66.6.43.22",
        "Identified that the DNS entry points to an external service (Tumblr) which could be claimed by an attacker"
      ],
      "verification_method": "Used nslookup DNS query to confirm that engineering.zomato.com is a CNAME pointing to domains.tumblr.com, indicating the subdomain is dangling and vulnerable to takeover."
    },
    {
      "vulnerable_domain": "docs.jitsi.net",
      "service_type": "GSuite (Google Apps)",
      "dns_record_type": "CNAME-based",
      "cname_record": "docs.jitsi.net. 10800 IN CNAME ghs.google.com.",
      "takeover_method": "An attacker can claim the abandoned subdomain by registering it in GSuite (Google Apps) and adding it as a custom domain to their Google account. This allows full control over the subdomain, potentially enabling malicious use. However, domain verification is required to fully take over the domain, which was not demonstrated successfully in this case.",
      "poc_steps": [
        "Identify the dangling CNAME record pointing docs.jitsi.net to ghs.google.com.",
        "Attempt to add docs.jitsi.net as a custom domain in GSuite (Google Apps).",
        "Attempt domain verification by adding required MX records in AWS Route 53 as per Google’s instructions.",
        "Fail to verify domain ownership due to AWS Route 53 not being authoritative for the domain.",
        "Note that without domain verification, full takeover (e.g., receiving emails or publishing pages) is not possible."
      ],
      "verification_method": "DNS query using dig confirmed the CNAME record pointing to ghs.google.com. Attempts to verify domain ownership via MX record changes failed because AWS Route 53 is not authoritative for docs.jitsi.net. No successful content hosting or email reception was demonstrated, so takeover was not confirmed."
    },
    {
      "vulnerable_domain": "code.wordpress.net",
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "The attacker was able to takeover the subdomain due to incorrect or dangling DNS records pointing to an unclaimed resource, allowing control over the subdomain.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": "feedback.screenhero.com",
      "service_type": "UserVoice",
      "dns_record_type": "CNAME-based",
      "cname_record": "feedback.screenhero.com CNAME screenhero.uservoice.com",
      "takeover_method": "The subdomain feedback.screenhero.com had a CNAME record pointing to screenhero.uservoice.com, a service that was inactive. An attacker could register the username 'Screenhero' on UserVoice without verification, thereby claiming the subdomain and serving malicious content.",
      "poc_steps": [
        "Identify that feedback.screenhero.com has a CNAME record pointing to screenhero.uservoice.com",
        "Confirm that the UserVoice service for screenhero.uservoice.com is inactive",
        "Register an account on UserVoice with the username 'Screenhero'",
        "Claim the subdomain by associating it with the registered UserVoice account",
        "Deploy a clone site with malicious content, such as login forms to steal credentials and cookies"
      ],
      "verification_method": "Accessed feedback.screenhero.com and confirmed that the subdomain was accessible and could be controlled by registering the username on UserVoice. A screenshot was provided as evidence. Later, Slack confirmed the subdomain was no longer accessible, indicating the issue was fixed."
    },
    {
      "vulnerable_domain": "svcgatewayus.starbucks.com",
      "service_type": "Azure",
      "dns_record_type": "CNAME-based",
      "cname_record": "svcgatewayus.starbucks.com has CNAME to s00197tmp0crdfulprod0.trafficmanager.net which has CNAME to 1fd05821-7501-40de-9e44-17235e7ab48b.cloudapp.net.",
      "takeover_method": "The subdomain svcgatewayus.starbucks.com pointed via CNAME to an Azure cloudapp.net subdomain that was no longer registered. By registering the unclaimed Azure Cloud Service subdomain (1fd05821-7501-40de-9e44-17235e7ab48b.cloudapp.net) in the Azure portal, the attacker gained full control over the content served on svcgatewayus.starbucks.com.",
      "poc_steps": [
        "Identify that svcgatewayus.starbucks.com CNAME points to 1fd05821-7501-40de-9e44-17235e7ab48b.cloudapp.net which is unregistered in Azure.",
        "Create a new Cloud Service in Azure portal with the exact subdomain name 1fd05821-7501-40de-9e44-17235e7ab48b.cloudapp.net.",
        "Create a Storage Account for the Cloud Service in Azure portal.",
        "Develop a simple ASP.NET web application using Visual Studio following Azure Cloud Services deployment format.",
        "Deploy the ASP.NET web application to the newly created Cloud Service.",
        "Access http://svcgatewayus.starbucks.com to confirm control over the subdomain content."
      ],
      "verification_method": "Accessed the subdomain URL (http://svcgatewayus.starbucks.com) which served the attacker's deployed content, demonstrating full control over the subdomain. The attacker also confirmed the ability to register the dangling Azure cloudapp.net subdomain and deploy a web application to it."
    },
    {
      "vulnerable_domain": "odoo-staging.exness.io",
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "The subdomain was vulnerable to takeover due to a dangling DNS record pointing to an unclaimed or unconfigured service, allowing an attacker to claim the subdomain and serve content or perform phishing/scam activities.",
      "poc_steps": null,
      "verification_method": "The issue was confirmed by the security team and development team, likely by attempting to access the subdomain and verifying control or content serving, as indicated by the triage and resolution comments."
    },
    {
      "vulnerable_domain": "de-headless.staging.gymshark.com",
      "service_type": "Shopify",
      "dns_record_type": "CNAME-based",
      "cname_record": null,
      "takeover_method": "The subdomain 'de-headless.staging.gymshark.com' had a dangling CNAME record pointing to Shopify, which was not claimed or configured. This allowed an attacker to claim the target on Shopify and serve arbitrary content on the subdomain, enabling hosting of malicious content such as malware, defacement, or phishing pages.",
      "poc_steps": [
        "Identify that 'de-headless.staging.gymshark.com' has a CNAME record pointing to Shopify.",
        "Claim the corresponding Shopify resource to take control of the subdomain.",
        "Deploy arbitrary content on the claimed Shopify resource.",
        "Access https://de-headless.staging.gymshark.com/ to verify that the attacker's content is served."
      ],
      "verification_method": "Accessed the subdomain URL https://de-headless.staging.gymshark.com/ and confirmed that attacker-controlled content was served. Provided multiple evidences including screenshots (image.png files) and a video (GymsharkSubdomainTakeover_Evidence.mp4) demonstrating control over the subdomain."
    },
    {
      "vulnerable_domain": "delivery.yelp.com",
      "service_type": "AWS S3",
      "dns_record_type": "CNAME-based",
      "cname_record": null,
      "takeover_method": "Creating an AWS S3 bucket named after the vulnerable subdomain (delivery.yelp.com) and enabling static website hosting to serve attacker-controlled content on the subdomain due to a dangling CNAME pointing to AWS S3.",
      "poc_steps": [
        "Create an Amazon S3 bucket named delivery.yelp.com",
        "Upload an attacker-controlled HTML web page to the bucket",
        "Enable static website hosting on the S3 bucket"
      ],
      "verification_method": "Accessed the subdomain delivery.yelp.com and confirmed that the attacker-controlled content hosted on the S3 bucket was served, demonstrating control over the subdomain."
    },
    {
      "vulnerable_domain": null,
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Subdomain takeover due to a dangling DNS record under mozgcp.net, where the researchers registered the dangling record and hosted content under the subdomain.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": "test.www.midigator.com",
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": null,
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": "george.ratelimited.me",
      "service_type": "GitLab Pages",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "The subdomain george.ratelimited.me was pointing to a GitLab Pages service that was no longer active, allowing an attacker to claim the GitLab Pages project and serve content on the dangling domain, resulting in a subdomain takeover.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": null,
      "service_type": "Acquia Cloud",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "A DNS entry was created pointing to a third party service (Acquia Cloud), but the third party application was forgotten or unclaimed, allowing an attacker to claim the subdomain via the external service and hijack it.",
      "poc_steps": null,
      "verification_method": "Screenshot provided showing 'Web Site Not Found' page indicating the subdomain was unclaimed and vulnerable to takeover."
    },
    {
      "vulnerable_domain": null,
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Subdomain takeover due to a dangling DNS record under mozgcp.net, where the DNS record pointed to an unclaimed resource that was registered by the researcher, allowing hosting of arbitrary content under the subdomain.",
      "poc_steps": null,
      "verification_method": "Researchers registered the dangling DNS record and were able to host content under the subdomain, confirming control over the subdomain."
    },
    {
      "vulnerable_domain": "creatorforum.roblox.com",
      "service_type": "Discourse",
      "dns_record_type": "CNAME-based",
      "cname_record": "creatorforum.roblox.com CNAME to a nonexistent Discourse website",
      "takeover_method": "The subdomain creatorforum.roblox.com pointed via a CNAME record to a nonexistent Discourse site. By registering or claiming the corresponding Discourse account or site, an attacker could have taken over the subdomain and served arbitrary content under the trusted roblox.com domain.",
      "poc_steps": [
        "Identify the subdomain creatorforum.roblox.com",
        "Check DNS records and find that creatorforum.roblox.com has a CNAME pointing to a nonexistent Discourse website",
        "Attempt to claim or create the Discourse site corresponding to the CNAME target",
        "Once claimed, serve arbitrary content on the subdomain",
        "Report the issue to Roblox via info@roblox.com and bugbounty@roblox.com"
      ],
      "verification_method": "Visited creatorforum.roblox.com and observed that the CNAME pointed to a nonexistent Discourse website, confirming the subdomain was dangling and vulnerable to takeover."
    },
    {
      "vulnerable_domain": "max1.liveplan.com",
      "service_type": "AWS EC2",
      "dns_record_type": "CNAME-based",
      "cname_record": "max1.liveplan.com. CNAME ec2-54-68-121-128.us-west-2.compute.amazonaws.com",
      "takeover_method": "The subdomain was pointed via a CNAME record to an EC2 public DNS name. When the EC2 instance was terminated and the DNS record was not updated, the IP was released back to AWS and could be reassigned to a new EC2 instance controlled by an attacker, enabling subdomain takeover.",
      "poc_steps": [
        "Query DNS records for max1.liveplan.com and observe CNAME pointing to EC2 public DNS.",
        "Terminate the original EC2 instance associated with the IP.",
        "Wait for the IP to be released back to AWS IP pool.",
        "Launch a new EC2 instance and assign the released IP.",
        "Serve content or SSL certificate on max1.liveplan.com from the new instance.",
        "Use SSLEnum tool to pull SSL certificate data from https://max1.liveplan.com and confirm control."
      ],
      "verification_method": "Pulled SSL certificate data from https://max1.liveplan.com using SSLEnum, which showed certificates for unrelated domains (*.test.tugo.com), indicating the subdomain is controlled by an attacker. A screenshot was also provided as evidence."
    },
    {
      "vulnerable_domain": "[REDACTED].jitsi.net",
      "service_type": "AWS EC2",
      "dns_record_type": "A-record",
      "cname_record": null,
      "takeover_method": "The subdomain pointed to an AWS EC2 instance IP address that no longer existed. The attacker was able to claim the same IP by launching their own EC2 instance, thereby serving content and obtaining TLS certificates for the domain.",
      "poc_steps": [
        "Run 'dig +short [REDACTED].jitsi.net' to identify the IP address 18.195.93.116",
        "Launch a new AWS EC2 instance and assign it the IP address 18.195.93.116",
        "Serve custom content on [REDACTED].jitsi.net",
        "Access [REDACTED].jitsi.net via curl to confirm control"
      ],
      "verification_method": "Accessed the domain via curl and received custom content including a comment '<!-- hackerone.com/ian -->', confirming control over the subdomain."
    },
    {
      "vulnerable_domain": "status.hosting24.com",
      "service_type": "Uptimerobot",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "The subdomain was previously down and unclaimed. The attacker created a new account on Uptimerobot, upgraded it, and added the vulnerable subdomain as a custom domain without any verification, allowing them to serve content on the subdomain.",
      "poc_steps": [
        "Identify that the subdomain status.hosting24.com was down and unclaimed.",
        "Create a new account on Uptimerobot.",
        "Upgrade the Uptimerobot account to a paid package.",
        "Add status.hosting24.com as a custom domain name in Uptimerobot without any verification.",
        "Immediately serve content on the subdomain via Uptimerobot."
      ],
      "verification_method": "The attacker was able to serve content on the subdomain immediately after adding it as a custom domain in Uptimerobot, demonstrating control over the subdomain. A screenshot (serve.jpeg) was provided as evidence."
    },
    {
      "vulnerable_domain": "kiosk.owox.com",
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": null,
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": null,
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Subdomain takeover due to a dangling DNS record under mozaws.net, where the DNS record pointed to an unclaimed resource that was registered by the researcher, allowing them to host content under the subdomain.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": "us-east4.37signals.com",
      "service_type": null,
      "dns_record_type": "NS-based",
      "cname_record": null,
      "takeover_method": "The subdomain takeover was achieved by exploiting dangling NS records pointing to a service that was not controlled, allowing an attacker to register and serve content on the subdomain.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": "info.hacker.one",
      "service_type": "UnbouncePages App",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Bypassing previous fixes and exploiting a vulnerable parameter in the UnbouncePages App that allows claiming the subdomain by creating a new page with a manipulated URL parameter, enabling control over the subdomain content.",
      "poc_steps": [
        "Login to UnbouncePages account",
        "Create a new page under any domain",
        "Go to 'EDIT NAME' section",
        "Fill with any input",
        "Intercept the request using Burp Suite or another proxy",
        "Add the body parameter '&page[url]=info.hacker.one/takeover-bypass-by-ak1t4' to the POST request",
        "Refresh the page and observe the new claimed domain URL",
        "Visit https://info.hacker.one/new-awesome-takeover/ to see the proof of concept page"
      ],
      "verification_method": "Confirmed takeover by accessing the subdomain URL https://info.hacker.one/new-awesome-takeover/ which displayed an alert box indicating successful subdomain takeover; screenshots provided showing the claimed domain and page content."
    },
    {
      "vulnerable_domain": "cloudfront.ubnt.com",
      "service_type": "AWS CloudFront",
      "dns_record_type": "CNAME-based",
      "cname_record": "cloudfront.ubnt.com. 268 IN CNAME du6drkqe7qw4g.cloudfront.net.",
      "takeover_method": "Claiming an unassociated CloudFront CNAME domain by creating a CloudFront distribution with the same CNAME, allowing the attacker to serve arbitrary content on the victim's subdomain.",
      "poc_steps": [
        "Performed DNS lookup for cloudfront.ubnt.com and found it points via CNAME to du6drkqe7qw4g.cloudfront.net.",
        "Verified that the CloudFront distribution du6drkqe7qw4g.cloudfront.net is not associated with any active origin or custom CNAME.",
        "Claimed the dangling CNAME by creating a CloudFront distribution with the same CNAME (cloudfront.ubnt.com).",
        "Configured the distribution to serve arbitrary content controlled by the attacker.",
        "Demonstrated ability to serve content on cloudfront.ubnt.com, including potential to fetch httpOnly cookies and obtain SSL certificates via meta/file verification."
      ],
      "verification_method": "DNS query confirmed the CNAME record pointing to an unclaimed CloudFront distribution; attacker successfully created a CloudFront distribution with the same CNAME and served arbitrary content, proving takeover capability."
    },
    {
      "vulnerable_domain": "[REDACTED]",
      "service_type": "Azure CDN",
      "dns_record_type": "CNAME-based",
      "cname_record": "[REDACTED]",
      "takeover_method": "Claimed the subdomain by creating a new Azure CDN Profile with the same name as the vulnerable subdomain's CNAME target, then created an Azure Web App to serve content, set the CDN origin to the Web App, assigned the custom domain to the CDN, and enabled SSL, effectively taking over the subdomain.",
      "poc_steps": [
        "Used dig to check DNS records and found the subdomain had status NXDOMAIN and pointed to a CNAME record.",
        "Created a new Azure CDN Profile with the name matching the vulnerable subdomain's CNAME target.",
        "Created an Azure Web App and uploaded a proof HTML file via FTP.",
        "Set the Azure CDN origin type to WebApp and selected the created Web App URL.",
        "Set the custom domain on the CDN to the vulnerable subdomain.",
        "Enabled SSL on the custom domain.",
        "Accessed https://[REDACTED]/proof.html to confirm content was served."
      ],
      "verification_method": "Accessed the vulnerable subdomain URL (https://[REDACTED]/proof.html) and confirmed the uploaded proof HTML file was served, demonstrating control over the subdomain."
    },
    {
      "vulnerable_domain": "www2.growasyouplan.com",
      "service_type": "AWS EC2",
      "dns_record_type": "A-record",
      "cname_record": null,
      "takeover_method": "The subdomain www2.growasyouplan.com pointed to an AWS EC2 instance IP address (67.202.62.93) that no longer existed. The attacker was able to claim this IP by launching their own EC2 instance at the same IP, thereby serving arbitrary content and obtaining TLS certificates for the domain.",
      "poc_steps": [
        "Performed DNS lookup for www2.growasyouplan.com to get IP address 67.202.62.93",
        "Confirmed the IP address was not in use by the legitimate owner",
        "Launched own AWS EC2 instance at IP 67.202.62.93",
        "Served custom content on www2.growasyouplan.com",
        "Obtained TLS certificate for www2.growasyouplan.com"
      ],
      "verification_method": "Accessed www2.growasyouplan.com and received attacker-controlled content (e.g., HTML comment '<!-- hackerone.com/ian -->'), confirming control over the subdomain."
    },
    {
      "vulnerable_domain": null,
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Subdomain takeover due to a dangling DNS record under mozaws.net, where the attacker registered the dangling record and was able to host content under the subdomain.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": null,
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Subdomain takeover due to a dangling DNS record under mozgcp.net, where the DNS record pointed to an unclaimed resource that was registered by the researcher, allowing hosting of content under the subdomain.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": "service.kiwi.ki",
      "service_type": "FreshDesk",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "The subdomain was pointing via DNS to FreshDesk services which had expired, allowing an attacker to claim the subdomain on FreshDesk and serve content under the victim's subdomain.",
      "poc_steps": [
        "Identify that the subdomain service.kiwi.ki points to FreshDesk service.",
        "Verify that the FreshDesk service subscription for this subdomain had expired.",
        "Claim the subdomain on FreshDesk as it was no longer controlled by KIWI.KI GmbH.",
        "Serve content or control the subdomain to potentially confuse or trick customers."
      ],
      "verification_method": "Accessed http://service.kiwi.ki/ and confirmed that the subdomain was taken over by another party, indicating the FreshDesk service was no longer controlled by KIWI.KI GmbH."
    },
    {
      "vulnerable_domain": "demo.greenhouse.io",
      "service_type": "Unbounce",
      "dns_record_type": "CNAME-based",
      "cname_record": null,
      "takeover_method": "The subdomain demo.greenhouse.io was pointing via a CNAME DNS record to an unclaimed Unbounce pages domain. Because the subdomain was not claimed on unbounce.com, an attacker could claim it and serve arbitrary content, enabling subdomain takeover.",
      "poc_steps": null,
      "verification_method": "A screenshot attachment was provided (Screenshot_(476).png) presumably showing control of the subdomain. The report mentions the domain was pointing to unbouncepages and the DNS record was removed after verification, indicating confirmation by accessing the domain and verifying content served from Unbounce."
    },
    {
      "vulnerable_domain": null,
      "service_type": "AWS S3",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "An unclaimed Amazon S3 bucket previously used for a musical.ly subdomain was no longer in use and did not host any user data, allowing an attacker to claim the bucket and take over the subdomain.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": "devrel.roblox.com",
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": null,
      "poc_steps": [
        "Visit https://devrel.roblox.com/subdomain-takeover"
      ],
      "verification_method": null
    },
    {
      "vulnerable_domain": "learnstormindia.khanacademy.org",
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "The subdomain learnstormindia.khanacademy.org was vulnerable to takeover, allowing an attacker to create fake login forms or steal sensitive information by exploiting the dangling subdomain pointing to an unclaimed or misconfigured service.",
      "poc_steps": null,
      "verification_method": "Screenshots were provided (Screenshot_(18).png and Screenshot_(19).png) demonstrating the vulnerability; confirmation was given by the reporter after the fix was applied."
    },
    {
      "vulnerable_domain": "info.hacker.one",
      "service_type": "UnbouncePage Services",
      "dns_record_type": "CNAME-based",
      "cname_record": "info.hacker.one CNAME app.unbounce.com",
      "takeover_method": "The attacker exploited a 0day in UnbouncePage's API that allowed claiming any domain with a DNS entry pointing to unbouncepages.com, enabling them to claim the subdomain info.hacker.one and serve their own content.",
      "poc_steps": [
        "Claimed the domain info.hacker.one via UnbouncePage's API exploiting the 0day.",
        "Placed a proof-of-concept page at http://info.hacker.one/blank-page-123133617adasdasdsa/",
        "Accessed the URL to demonstrate control over the subdomain."
      ],
      "verification_method": "Verified takeover by accessing the subdomain URL and observing an alert box indicating control; provided screenshots and a private video PoC demonstrating the takeover."
    },
    {
      "vulnerable_domain": "signup.uber.com",
      "service_type": "Netlify",
      "dns_record_type": "CNAME-based",
      "cname_record": null,
      "takeover_method": "The subdomain signup.uber.com was pointing via a CNAME record to an unclaimed Netlify domain, allowing an attacker to claim the Netlify domain and serve content on the Uber subdomain.",
      "poc_steps": [
        "Identify that signup.uber.com CNAME points to an unclaimed Netlify domain",
        "Register and claim the unclaimed Netlify domain corresponding to the CNAME target",
        "Deploy content on the claimed Netlify domain",
        "Access signup.uber.com and verify that the attacker's content is served"
      ],
      "verification_method": "Accessed signup.uber.com and confirmed that the attacker-controlled Netlify content was served, demonstrating control over the subdomain."
    },
    {
      "vulnerable_domain": "www.[REDACTED]",
      "service_type": "AWS",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Subdomain takeover via AWS service by claiming the dangling subdomain pointing to AWS resources, allowing hosting of arbitrary content on the subdomain.",
      "poc_steps": [
        "Go to https://www.[REDACTED]/[REDACTED] which is the PoC hosted by the researcher"
      ],
      "verification_method": null
    },
    {
      "vulnerable_domain": "resources.hackerone.com",
      "service_type": "Uberflip",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Taking over the subdomain by registering it on Uberflip, a public product, allowing the attacker to serve arbitrary content including iFraming pages of their choice on the subdomain.",
      "poc_steps": [
        "Identify the subdomain resources.hackerone.com as dangling or available for takeover.",
        "Register the subdomain on Uberflip platform.",
        "Configure the subdomain to serve content of the attacker's choice, including iFraming external pages.",
        "Access the subdomain to confirm control and content display."
      ],
      "verification_method": "Verified by accessing the subdomain and confirming that arbitrary content controlled by the attacker was served, demonstrating the ability to deface the HackerOne domain without affecting confidentiality."
    },
    {
      "vulnerable_domain": null,
      "service_type": "AWS S3",
      "dns_record_type": "CNAME-based",
      "cname_record": null,
      "takeover_method": "Subdomain pointed via CNAME to an unused Amazon S3 bucket, allowing attacker to claim the bucket and serve content on the subdomain.",
      "poc_steps": [
        "Identify subdomain loosely related to target that resolves to an Amazon S3 bucket.",
        "Confirm the S3 bucket is unclaimed or unused.",
        "Create or claim the S3 bucket with the same name as the subdomain target.",
        "Upload content to the bucket to serve on the subdomain.",
        "Report the takeover to the responsible bug bounty team."
      ],
      "verification_method": "Accessed the subdomain URL and confirmed that content served from the attacker-controlled S3 bucket was displayed, demonstrating control over the subdomain."
    },
    {
      "vulnerable_domain": "status-stage0.stripo.email",
      "service_type": "AWS S3",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "The attacker booked the subdomain from the subdomain services (specifically from AWS Amazon S3) allowing them to edit its components and serve content, effectively taking over the subdomain.",
      "poc_steps": [
        "Booked the subdomain status-stage0.stripo.email from the subdomain services (AWS S3).",
        "Edited the components of the subdomain to serve attacker-controlled content.",
        "Demonstrated control over the subdomain by serving content or modifying its behavior."
      ],
      "verification_method": "Confirmed takeover by successfully booking the subdomain on the AWS S3 service and demonstrating control over it, supported by screenshots (attachments 100.png and poc.png) and comments verifying the validity of the takeover."
    },
    {
      "vulnerable_domain": null,
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "The subdomain was pointing to an inactive or non-existent resource on a third-party service, allowing the attacker to claim the resource on that service and take control of the subdomain to serve arbitrary content.",
      "poc_steps": [
        "Identify the subdomain pointing to a third-party service resource.",
        "Verify that the resource is inactive or non-existent.",
        "Claim the resource on the third-party service.",
        "Serve arbitrary content on the subdomain to confirm control."
      ],
      "verification_method": "Visited the claimed subdomain URL to observe the changes and served content, supported by a screenshot provided by the researcher."
    },
    {
      "vulnerable_domain": "███.wavecell.com",
      "service_type": "AWS EC2",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "An EC2 instance was terminated but the DNS record was not updated or removed, leaving a dangling DNS entry that could be taken over.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": "█████████.8x8.com",
      "service_type": null,
      "dns_record_type": "A-record",
      "cname_record": null,
      "takeover_method": "Misconfiguration in a script caused an A record to point to subdomains outside of 8x8's control, combined with changes in AWS DNS resolution behavior, enabling potential subdomain takeover.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": "openapi.starbucks.com",
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Exploited a process flaw in the approval process involving human interaction to serve content from the subdomain space allocated to openapi.starbucks.com, enabling serving content from unique URLs not used by Starbucks apps and services.",
      "poc_steps": [
        "Identify that openapi.starbucks.com was suspected vulnerable to subdomain takeover.",
        "Submit initial report which was closed as false positive.",
        "Create a non-destructive proof of concept demonstrating ability to serve content from openapi.starbucks.com.",
        "Provide reproduction steps and PoC to Starbucks security team.",
        "Starbucks identifies flaw in approval process requiring human interaction.",
        "Operational and platform code changes introduced to fix the issue."
      ],
      "verification_method": "Provided a non-destructive proof of concept demonstrating serving content from the domain, including reproduction steps and answers to questions from Starbucks security team, confirming the ability to serve content from unique URLs under openapi.starbucks.com."
    },
    {
      "vulnerable_domain": [
        "svcgatewaydevus.starbucks.com",
        "svcgatewayloadus.starbucks.com"
      ],
      "service_type": "Azure",
      "dns_record_type": "CNAME-based",
      "cname_record": null,
      "takeover_method": "The subdomains pointed via CNAME records to Azure resources that were no longer claimed or controlled by Starbucks, allowing an attacker to claim those Azure resources and serve content on the Starbucks subdomains.",
      "poc_steps": [
        "Identify subdomains svcgatewaydevus.starbucks.com and svcgatewayloadus.starbucks.com with CNAME records pointing to Azure resources.",
        "Verify that the Azure resources were unclaimed or released.",
        "Claim the Azure resources corresponding to the CNAME targets.",
        "Serve content on the claimed Azure resources to confirm control over the Starbucks subdomains."
      ],
      "verification_method": "The takeover was confirmed by claiming the Azure resources linked to the subdomains' CNAME records and serving content on the Starbucks subdomains, demonstrating control. Additionally, internal teams confirmed removal of the CNAME records and requested release of the Azure resources."
    },
    {
      "vulnerable_domain": "www.codefi.consensys.net",
      "service_type": "Squarespace",
      "dns_record_type": "CNAME-based",
      "cname_record": null,
      "takeover_method": "The subdomain www.codefi.consensys.net had a CNAME DNS record pointing to Squarespace but was not claimed by any Squarespace website. The attacker created a Squarespace account, set up a website template, and claimed the subdomain by adding it as a custom domain in Squarespace, thereby hosting their own content on the previously unclaimed subdomain.",
      "poc_steps": [
        "Use Subfinder to enumerate subdomains of consensys.net",
        "Check HTTP status codes of discovered subdomains",
        "Identify subdomains returning 404 with message indicating domain mapped to Squarespace but not claimed",
        "Create a Squarespace account",
        "Create a website template on Squarespace",
        "Add the vulnerable subdomain (http://www.codefi.consensys.net/) as a custom domain in Squarespace",
        "Confirm takeover by serving content on the subdomain"
      ],
      "verification_method": "Accessed http://www.codefi.consensys.net/ and observed the domain was unclaimed with a Squarespace 404 message; after claiming the domain in Squarespace and hosting content, the subdomain served attacker-controlled content, confirming takeover."
    },
    {
      "vulnerable_domain": null,
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Subdomain takeover due to a dangling DNS record under mozaws.net, where the DNS record pointed to an unclaimed resource that was registered by the researchers, allowing them to host content under the subdomain.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": "help.tictail.com",
      "service_type": "Zendesk",
      "dns_record_type": "CNAME-based",
      "cname_record": null,
      "takeover_method": "The attacker identified a dangling CNAME pointing the subdomain help.tictail.com to a Zendesk domain that was not claimed. By registering a Zendesk account and selecting the available subdomain tictail.zendesk.com, the attacker was able to claim the subdomain and map the vulnerable domain to their Zendesk account, enabling control over the subdomain.",
      "poc_steps": [
        "Used dig and Zendesk username availability check to identify that help.tictail.com was vulnerable to takeover.",
        "Registered a free trial account on zendesk.com.",
        "Chose the Zendesk subdomain name 'tictail.zendesk.com' which was available for takeover.",
        "In Zendesk Settings > Account > Host mapping, added the vulnerable domain https://help.tictail.com.",
        "Enabled SSL under security settings to prevent redirects when browsing the target domain.",
        "Created a Help Center guide (not published).",
        "Added a test article named 'POC' (not published)."
      ],
      "verification_method": "Verification was done by successfully registering the Zendesk subdomain tictail.zendesk.com, mapping the vulnerable domain help.tictail.com to the Zendesk account, enabling SSL, and creating content on the subdomain. Screenshots and a video of the full takeover process were provided as evidence."
    },
    {
      "vulnerable_domain": "users.tweetdeck.com",
      "service_type": "AWS S3",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "The subdomain users.tweetdeck.com was pointing to an AWS S3 bucket, but no bucket was connected to it. An attacker could claim the unassigned S3 bucket name matching the subdomain and thereby take over the full subdomain.",
      "poc_steps": [
        "Identify that users.tweetdeck.com DNS points to an AWS S3 bucket that does not exist.",
        "Claim the AWS S3 bucket with the name users.tweetdeck.com.",
        "Upload malicious content to the claimed bucket.",
        "Access http://users.tweetdeck.com/XSS.html to demonstrate control over the subdomain."
      ],
      "verification_method": "Accessed the URL http://users.tweetdeck.com/XSS.html which served attacker-controlled content, confirming the takeover of the subdomain."
    },
    {
      "vulnerable_domain": "storybook.lystit.com",
      "service_type": "AWS S3",
      "dns_record_type": "CNAME-based",
      "cname_record": "storybook.lystit.com. IN CNAME [REDACTED]",
      "takeover_method": "The subdomain storybook.lystit.com had a dangling CNAME record pointing to an unclaimed AWS S3 bucket named 'storybook.lystit.com'. By registering an S3 bucket with this name and enabling static website hosting, an attacker was able to serve arbitrary content on the subdomain, effectively taking it over.",
      "poc_steps": [
        "Identify that storybook.lystit.com has a CNAME record pointing to an unclaimed S3 bucket.",
        "Register an AWS S3 bucket named 'storybook.lystit.com'.",
        "Enable static website hosting on the newly created S3 bucket.",
        "Upload arbitrary content to the bucket to serve on the subdomain.",
        "Access http://storybook.lystit.com/ to confirm control and serve proof-of-concept content.",
        "Demonstrate stored XSS by accessing http://storybook.lystit.com/asdjklkas1312das879123.html."
      ],
      "verification_method": "Accessed the subdomain URL (http://storybook.lystit.com/) and confirmed that attacker-controlled content was served. Additionally, screenshots were provided showing the hosted content and a stored XSS proof-of-concept page, verifying full control over the subdomain."
    },
    {
      "vulnerable_domain": null,
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Subdomain takeover due to a dangling DNS record under mozaws.net, where the attacker registered the dangling record and was able to host content under the subdomain.",
      "poc_steps": null,
      "verification_method": "Researchers registered the dangling DNS record and hosted content under the subdomain, confirming control over it."
    },
    {
      "vulnerable_domain": null,
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": null,
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": null,
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "The subdomain takeover was caused by the server routing requests for unknown subdomains to a fallback domain ({REDACTED}.data.gov) hosting a static website. Because the original HTTP Host header was passed along, the server responded as if the unknown subdomain was hosted directly, allowing attackers to serve content on these subdomains. The vulnerability was fixed by disabling the fallback routing to the {REDACTED}.data.gov website for unknown domains.",
      "poc_steps": [
        "Identify subdomains of {REDACTED}.data.gov that resolve via DNS but are not properly routed.",
        "Send HTTP requests to these unknown subdomains.",
        "Observe that the server routes these requests to the fallback {REDACTED}.data.gov static site, passing the original Host header.",
        "Confirm that content is served as if the unknown subdomain is hosted, demonstrating takeover capability."
      ],
      "verification_method": "Verified by sending HTTP requests to the vulnerable subdomains and observing that the server responded with content from the fallback static site, indicating that the unknown subdomains were effectively serving content despite not being properly configured."
    },
    {
      "vulnerable_domain": "accessday.opn.ooo",
      "service_type": "WIX",
      "dns_record_type": "CNAME-based",
      "cname_record": null,
      "takeover_method": "The subdomain accessday.opn.ooo pointed to a WIX CDN via a CNAME record, but the domain was not claimed or configured on WIX. An attacker could claim this subdomain on WIX to serve arbitrary content, resulting in a subdomain takeover.",
      "poc_steps": [
        "Visit http://accessday.opn.ooo/",
        "Observe that the domain points to WIX CDN but is unclaimed",
        "Claim the subdomain on WIX to serve content under accessday.opn.ooo"
      ],
      "verification_method": "Accessed the domain URL and confirmed it was pointing to WIX CDN without being claimed, supported by a screenshot (Screenshot_2023-04-27_15_44_24.png) showing the domain behavior."
    },
    {
      "vulnerable_domain": "mta1a1.spmail.uber.com",
      "service_type": "AWS Elastic IP",
      "dns_record_type": "A-record",
      "cname_record": null,
      "takeover_method": "A dangling AWS A record pointed to an unallocated AWS Elastic IP address, allowing an attacker to allocate the IP from AWS's elastic IP pool and take over the DNS zone for mta1a1.spmail.uber.com. This enabled access to scoped cookies and CORS, facilitating phishing attacks.",
      "poc_steps": [
        "Identify the dangling A record for mta1a1.spmail.uber.com pointing to an AWS Elastic IP.",
        "Allocate the same Elastic IP from AWS's pool to gain control over the IP address.",
        "Serve content or intercept traffic on the allocated IP to take over the subdomain.",
        "Leverage access to scoped cookies and CORS policies to facilitate phishing attacks."
      ],
      "verification_method": "Confirmed takeover by obtaining the IP address from the AWS Elastic IP pool matching the dangling A record, demonstrating control over the subdomain and ability to serve content or intercept requests scoped to mta1a1.spmail.uber.com."
    },
    {
      "vulnerable_domain": "cdn.grab.com",
      "service_type": "AWS CloudFront",
      "dns_record_type": "CNAME-based",
      "cname_record": null,
      "takeover_method": "The subdomain cdn.grab.com pointed to an insecure AWS CloudFront distribution that was not properly claimed or secured, allowing an attacker to take over the subdomain by creating a CloudFront distribution with the same domain name and serving malicious content.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": "coding-exercises.udemy.com.",
      "service_type": "GitBook",
      "dns_record_type": "CNAME-based",
      "cname_record": "coding-exercises.udemy.com. 1 IN CNAME www.gitbooks.io.",
      "takeover_method": "The subdomain takeover was achieved by exploiting a trailing dot vulnerability in GitBook's Custom Domain feature. The DNS CNAME record points to GitBook's service, but the trailing dot in the domain name causes the service to treat the domain as unclaimed, allowing an attacker to claim and serve content on the dangling subdomain.",
      "poc_steps": [
        "Perform a DNS lookup (dig) for coding-exercises.udemy.com. (with trailing dot) to confirm CNAME to www.gitbooks.io.",
        "Perform a DNS lookup (dig) for coding-exercises.udemy.com (without trailing dot) to compare results.",
        "Access the URL https://coding-exercises.udemy.com. (with trailing dot) to demonstrate control over the subdomain.",
        "Show that the trailing dot causes the subdomain to be vulnerable to takeover via GitBook's Custom Domain feature."
      ],
      "verification_method": "Verification was done by comparing DNS dig results for the domain with and without the trailing dot, showing the CNAME pointing to GitBook's service. Accessing the URL with the trailing dot demonstrated that the subdomain was taken over, as GitBook served content on the dangling domain. A screenshot was also provided as evidence."
    },
    {
      "vulnerable_domain": "gameday.websummit.net",
      "service_type": "AWS S3",
      "dns_record_type": "CNAME-based",
      "cname_record": "gameday.websummit.net. IN CNAME gameday.websummit.net.s3-website-eu-west-1.amazonaws.com",
      "takeover_method": "Created an AWS S3 bucket named 'gameday.websummit.net' to claim the dangling CNAME pointing to a non-existent S3 website endpoint, allowing control over the subdomain content.",
      "poc_steps": [
        "Identified that gameday.websummit.net DNS entry pointed to a non-existent S3 bucket endpoint gameday.websummit.net.s3-website-eu-west-1.amazonaws.com",
        "Created an AWS S3 bucket with the name 'gameday.websummit.net'",
        "Uploaded a proof-of-concept file to the bucket",
        "Accessed http://gameday.websummit.net to confirm control over the subdomain"
      ],
      "verification_method": "Accessed the subdomain URL and confirmed the uploaded proof-of-concept content was served, supported by screenshots attached in the report."
    },
    {
      "vulnerable_domain": "landing.udemy.com",
      "service_type": "Unbounce",
      "dns_record_type": "CNAME-based",
      "cname_record": "landing.udemy.com 300 IN CNAME unbouncepages.com",
      "takeover_method": "The target subdomain points via a DNS CNAME record to unbounce.com service. An attacker can register the subdomain on unbounce.com to claim it, enabling hosting of custom HTML/JavaScript pages on the domain, leveraging Unbounce's custom 404-page hosting functionality to conduct phishing or XSS attacks.",
      "poc_steps": [
        "Query DNS records for landing.udemy.com and identify CNAME pointing to unbouncepages.com",
        "Recognize that the subdomain is unclaimed on unbounce.com",
        "Register the subdomain on unbounce.com to claim ownership",
        "Host custom HTML/JavaScript content on the claimed subdomain via Unbounce's platform"
      ],
      "verification_method": "Verified the CNAME DNS record pointing to unbouncepages.com and confirmed with Unbounce support that the domain was not linked to any account (supported by screenshot unbounce_support_domain_not_linked_chat.JPG). Did not proceed with takeover but confirmed vulnerability through support communication."
    },
    {
      "vulnerable_domain": "sales.mixmax.com",
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "The subdomain was vulnerable due to an unused DNS record pointing to a service that was no longer in use, allowing potential takeover by claiming the resource at the target service.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": "prod.p.ssl.global.fastly.net",
      "service_type": "Fastly",
      "dns_record_type": "CNAME-based",
      "cname_record": "prod.p.ssl.global.fastly.net",
      "takeover_method": "Claiming an unclaimed Fastly domain by creating an account on fastly.com and assigning the dangling CNAME to an attacker-controlled service, allowing control over the subdomain.",
      "poc_steps": [
        "Perform DNS enumeration on brave.com subdomains.",
        "Identify CNAME records pointing to prod.p.ssl.global.fastly.net and prod.p.ssl.global.fastlylb.net.",
        "Access prod.p.ssl.global.fastly.net in a browser and observe Fastly error indicating unknown domain.",
        "Conclude that the domain is unclaimed and can be registered by creating an account on fastly.com and adding the domain as a custom domain."
      ],
      "verification_method": "Accessed the CNAME prod.p.ssl.global.fastly.net and observed the Fastly error: 'unknown domain: prod.p.ssl.global.fastly.net', indicating the domain was not configured and potentially vulnerable to takeover."
    },
    {
      "vulnerable_domain": "mydailydev.starbucks.com",
      "service_type": "Azure",
      "dns_record_type": "CNAME-based",
      "cname_record": "mydailydev.starbucks.com. IN CNAME Azure Traffic Manager profile",
      "takeover_method": "The subdomain had a CNAME record pointing to an Azure Traffic Manager profile that was unclaimed. The attacker claimed the Azure Traffic Manager profile, enabling control over the subdomain.",
      "poc_steps": [
        "Identify subdomain mydailydev.starbucks.com with CNAME pointing to an Azure Traffic Manager profile",
        "Claim the unclaimed Azure Traffic Manager profile referenced by the CNAME record",
        "Serve content or control the subdomain via the claimed Azure Traffic Manager profile"
      ],
      "verification_method": "Confirmed takeover by accessing the subdomain and verifying control via the claimed Azure Traffic Manager profile (details not explicitly provided)"
    },
    {
      "vulnerable_domain": "fastly.sc-cdn.net",
      "service_type": "Fastly",
      "dns_record_type": "CNAME-based",
      "cname_record": null,
      "takeover_method": "The subdomain fastly.sc-cdn.net had a DNS record pointing to a Fastly service instance that was cancelled but the DNS record was not removed. This allowed the attacker to create a new Fastly instance with the same domain, effectively taking over the subdomain.",
      "poc_steps": [
        "Identify the subdomain fastly.sc-cdn.net with a dangling Fastly DNS record.",
        "Create a Fastly service instance configured to respond to fastly.sc-cdn.net.",
        "Deploy content to the Fastly instance to confirm control over the subdomain.",
        "Visit http://fastly.sc-cdn.net/takeover.html to verify content is served from the attacker's Fastly instance."
      ],
      "verification_method": "Confirmed the domain ownership via Censys certificate data linking fastly.sc-cdn.net to Snapchat. Verified control by serving custom content at http://fastly.sc-cdn.net/takeover.html. Additionally, server logs showed Snapchat client requests to the domain, confirming it is in use."
    },
    {
      "vulnerable_domain": "blog.exchangemarketplace.com",
      "service_type": "Shopify",
      "dns_record_type": "CNAME-based",
      "cname_record": null,
      "takeover_method": "The subdomain blog.exchangemarketplace.com was configured with a DNS record pointing to Shopify, but the domain was not claimed or used by the original owner. The attacker was able to add the subdomain to their own Shopify store, effectively taking over the subdomain by claiming it on Shopify's platform.",
      "poc_steps": [
        "Identify that blog.exchangemarketplace.com DNS record points to Shopify but is unclaimed.",
        "Add blog.exchangemarketplace.com as a custom domain to own Shopify store.",
        "Verify that the subdomain now serves content from the attacker's Shopify store."
      ],
      "verification_method": "Accessed https://blog.exchangemarketplace.com/ and confirmed that the content served was from the attacker's Shopify store. Provided screenshots (takeover.jpg and exchange_market_takeover.jpg) as proof of takeover."
    },
    {
      "vulnerable_domain": null,
      "service_type": "Heroku",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Re-registering a decommissioned subdomain on Heroku that was previously pointing to a decommissioned Slack sign-up app, allowing the attacker to claim the subdomain by creating a new Heroku app under their own account.",
      "poc_steps": [
        "Identify outdated link on public blog pointing to decommissioned Slack sign-up app hosted on Heroku.",
        "Attempt to register the subdomain on Heroku.",
        "Successfully re-register the decommissioned subdomain with own Heroku account."
      ],
      "verification_method": "Confirmed takeover by accessing the subdomain after re-registration and verifying control via the newly created Heroku app."
    },
    {
      "vulnerable_domain": "███████.8x8.com",
      "service_type": "AWS EC2",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "The subdomain pointed to an EC2 instance that was replaced, but the DNS record was not updated or removed, leaving a dangling DNS entry that allowed potential takeover.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": "8ybhy85kld9zp9xf84x6.imgur.com",
      "service_type": "Squarespace",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "The attacker found an unclaimed subdomain under imgur.com and added it as a custom domain in a new Squarespace account, thereby claiming the subdomain and serving content from Squarespace.",
      "poc_steps": [
        "Use a subdomain scanner (Subdomain-finder) to find unclaimed subdomain 8ybhy85kld9zp9xf84x6.imgur.com",
        "Create a new account at Squarespace",
        "Go to Settings -> Domains -> Use Domain I Own",
        "Enter the unclaimed subdomain 8ybhy85kld9zp9xf84x6.imgur.com",
        "Claim the subdomain and serve content from Squarespace"
      ],
      "verification_method": "Proof of concept video showing the subdomain resolving to the attacker's Squarespace page; DNS query showing NOERROR status for the subdomain; screenshots attached as evidence."
    },
    {
      "vulnerable_domain": "blog.bitstripsforschools.com",
      "service_type": "WordPress",
      "dns_record_type": "CNAME-based",
      "cname_record": null,
      "takeover_method": "An unclaimed WordPress domain mapping upgrade was leveraged to assume control of the subdomain by pointing the CNAME entry to an unclaimed WordPress domain, allowing an external party to serve arbitrary content under the subdomain.",
      "poc_steps": [
        "Identify the CNAME DNS entry for blog.bitstripsforschools.com pointing to a WordPress domain that was unclaimed.",
        "Verify that the WordPress domain was unclaimed and could be registered or claimed by an external party.",
        "Claim the unclaimed WordPress domain to gain control over the content served at blog.bitstripsforschools.com.",
        "Serve arbitrary content on the subdomain within the Bitstrips context."
      ],
      "verification_method": "Confirmed takeover by accessing blog.bitstripsforschools.com and verifying that arbitrary content could be served, indicating control over the subdomain via the unclaimed WordPress domain."
    },
    {
      "vulnerable_domain": "1511493148.cloud.vimeo.com",
      "service_type": "Vimeo",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "The researcher found a DNS entry pointing to an unused IP address, which allowed domain hijacking by taking control of the subdomain.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": null,
      "service_type": "Shopify",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Taking over multiple ttcdn.co subdomains by exploiting dangling DNS records pointing to Shopify-related services, allowing control over those subdomains once DNS records were removed but the domain remained out of scope.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": "dev-admin.periscope.tv",
      "service_type": "AWS S3",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "The subdomain dev-admin.periscope.tv was pointing to an AWS S3 bucket website endpoint that was unclaimed or misconfigured, allowing an attacker to claim the bucket and serve content under the subdomain, resulting in subdomain takeover.",
      "poc_steps": [
        "Identify that dev-admin.periscope.tv resolves or is linked to an AWS S3 website endpoint (http://dev-admin.periscope.tv.s3-website-us-west-2.amazonaws.com/index.html).",
        "Claim or create an AWS S3 bucket with the name matching the subdomain (dev-admin.periscope.tv).",
        "Upload content to the bucket to serve under the subdomain.",
        "Access dev-admin.periscope.tv and dev-admin.periscope.tv/index.html to confirm content is served from the attacker's bucket."
      ],
      "verification_method": "Accessed the subdomain URLs and confirmed that the content served was from the AWS S3 bucket website endpoint, as shown in screenshots (amazone_aws.PNG, amazon_aws_cloud_front.PNG) and the URL http://dev-admin.periscope.tv.s3-website-us-west-2.amazonaws.com/index.html."
    },
    {
      "vulnerable_domain": "[REDACTED]",
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "The subdomain was left pointing to an unclaimed resource, allowing an attacker to create content hosted on the vulnerable domain, effectively taking over the subdomain.",
      "poc_steps": [
        "Navigate to http://[REDACTED]",
        "Observe a blank page",
        "Check the page source code to find proof of takeover (contains '<!-- poc by deleite -->')"
      ],
      "verification_method": "Accessed the vulnerable domain URL and inspected the HTML source code, which contained a proof-of-concept comment indicating successful takeover."
    },
    {
      "vulnerable_domain": "competition.shopify.com",
      "service_type": "Heroku",
      "dns_record_type": "CNAME-based",
      "cname_record": "competition.shopify.com CNAME competition.shopify.com.herokudns.com",
      "takeover_method": "The subdomain competition.shopify.com was pointing via a CNAME record to an unclaimed Heroku service (competition.shopify.com.herokudns.com). The attacker claimed the custom domain in Heroku by adding it to their Heroku app, allowing them to serve content on the subdomain.",
      "poc_steps": [
        "Identify that competition.shopify.com CNAME points to an unclaimed Heroku domain competition.shopify.com.herokudns.com",
        "Claim the custom domain competition.shopify.com in Heroku by adding it to a Heroku app",
        "Upload a proof of concept HTML file to the Heroku app at https://competition.shopify.com/329a01fddb5a552265170b02c579c85f.html",
        "Redirect the index page of the subdomain to https://shopify.com to demonstrate control without malicious intent"
      ],
      "verification_method": "Accessed https://competition.shopify.com/329a01fddb5a552265170b02c579c85f.html to confirm the attacker-controlled content was served from the subdomain. Additionally, a Let's Encrypt SSL certificate was generated for the subdomain, confirming control."
    },
    {
      "vulnerable_domain": null,
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Subdomain takeover due to a dangling DNS record under mozaws.net, where the DNS record pointed to an unclaimed resource that was registered by the researcher, allowing them to host content under the subdomain.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": null,
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Subdomain takeover due to a dangling DNS record under mozilla.org, where the DNS record pointed to an unclaimed resource that was registered by the researcher, allowing hosting of content under the subdomain.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": "test-cncf-aws.canary.k8s.io",
      "service_type": "AWS Route53",
      "dns_record_type": "NS-based",
      "cname_record": null,
      "takeover_method": "Claiming the DNS zone in AWS Route53 by assigning the subdomain to specific AWS nameservers, allowing creation of arbitrary DNS records under the subdomain.",
      "poc_steps": [
        "Identify the subdomain test-cncf-aws.canary.k8s.io with NS records pointing to AWS nameservers.",
        "Create a hosted zone in AWS Route53 for test-cncf-aws.canary.k8s.io with one of the specified AWS nameservers (e.g., ns-265.awsdns-33.com).",
        "Once the zone is claimed, create DNS records under the subdomain, such as poc.test-cncf-aws.canary.k8s.io.",
        "Verify control over the subdomain by resolving or accessing the created DNS records."
      ],
      "verification_method": "Confirmed takeover by successfully creating DNS records under the claimed subdomain zone in Route53, demonstrating control over the subdomain."
    },
    {
      "vulnerable_domain": "proxies.sifchain.finance",
      "service_type": "Vercel",
      "dns_record_type": "CNAME-based",
      "cname_record": null,
      "takeover_method": "The subdomain proxies.sifchain.finance points via a CNAME record to Vercel but is not claimed or configured in the victim's Vercel account, allowing an attacker to claim the subdomain on Vercel and serve content under that domain.",
      "poc_steps": [
        "Visit https://vercel.com/login and log in with a developer account.",
        "Check the availability of the proxies.sifchain.finance subdomain at https://vercel.com/[YourUsername]/sveltekit/settings/domains.",
        "Observe that proxies.sifchain.finance is not claimed or configured in the account.",
        "Attempt to claim the subdomain proxies.sifchain.finance on Vercel.",
        "Note that takeover did not succeed immediately but has potential with further testing or bypasses."
      ],
      "verification_method": "Screenshots and videos were taken showing the subdomain returning DEPLOYMENT_NOT_FOUND errors on Vercel, indicating the subdomain is dangling and potentially claimable. Attempts to claim the subdomain were made but blocked by authorization issues. The presence of the CNAME record pointing to Vercel without a valid deployment was used as an indicator."
    },
    {
      "vulnerable_domain": "rider.uber.com",
      "service_type": "AWS Cloudfront",
      "dns_record_type": "CNAME-based",
      "cname_record": null,
      "takeover_method": "The subdomain rider.uber.com pointed via a CNAME record to a non-existent AWS Cloudfront distribution, allowing an attacker to claim the distribution and serve arbitrary content on the subdomain.",
      "poc_steps": [
        "Observed that rider.uber.com responded with an error indicating no Cloudfront distribution was associated.",
        "Claimed the non-existent Cloudfront distribution corresponding to rider.uber.com.",
        "Deployed a proof-of-concept page accessible at http://rider.uber.com/login-poc to demonstrate control over the subdomain."
      ],
      "verification_method": "Accessed rider.uber.com over both HTTP and HTTPS and observed error responses indicating no distribution; after claiming the distribution, accessed the PoC URL and confirmed attacker-controlled content was served, supported by screenshots."
    },
    {
      "vulnerable_domain": "status.vimeo.com",
      "service_type": "statuspage.io",
      "dns_record_type": "CNAME-based",
      "cname_record": "status.vimeo.com CNAME hosted.statuspage.io",
      "takeover_method": "The subdomain status.vimeo.com was pointing via a CNAME record to hosted.statuspage.io, but no statuspage.io site was claimed or configured for this subdomain. This allowed an attacker to claim the subdomain by creating a statuspage.io site using status.vimeo.com as the custom domain, effectively taking control of the subdomain.",
      "poc_steps": [
        "Identify that status.vimeo.com is a CNAME to hosted.statuspage.io with no active statuspage configured",
        "Create a statuspage.io site and configure it to use status.vimeo.com as the custom domain",
        "Access http://status.vimeo.com to confirm control over the subdomain"
      ],
      "verification_method": "Accessed http://status.vimeo.com and confirmed that the attacker-controlled statuspage.io content was served on the status.vimeo.com domain, demonstrating full control over the subdomain."
    },
    {
      "vulnerable_domain": "a2.bime.io",
      "service_type": "AWS S3",
      "dns_record_type": "CNAME-based",
      "cname_record": "a2.bime.io. 59 IN CNAME bimeio.s3-website-us-east-1.amazonaws.com.",
      "takeover_method": "The subdomain pointed to an unclaimed Amazon S3 bucket. The attacker created an S3 bucket named exactly as the subdomain in the US East 1 region, enabled static website hosting, uploaded a fake login page, and made it publicly accessible, thereby serving attacker-controlled content on the victim's subdomain.",
      "poc_steps": [
        "Resolve DNS for a2.bime.io and observe it points to bimeio.s3-website-us-east-1.amazonaws.com.",
        "Visit http://a2.bime.io and confirm the bucket did not exist (404 error).",
        "Create an S3 bucket named 'a2.bime.io' in the US East 1 region.",
        "Enable static website hosting on the bucket and set 'index.html' as the index document.",
        "Upload a fake login page as 'index.html' and make it public.",
        "Visit http://a2.bime.io and observe the fake login page served from the attacker's bucket."
      ],
      "verification_method": "Accessed http://a2.bime.io after bucket creation and confirmed the fake login page was served, demonstrating control over the subdomain content."
    },
    {
      "vulnerable_domain": null,
      "service_type": "mozilla.org",
      "dns_record_type": "CNAME-based",
      "cname_record": null,
      "takeover_method": "The subdomain was a CNAME pointing to www.mozilla.org hosted at an unregistered domain. By registering the target domain, the attacker was able to claim and take over the subdomain.",
      "poc_steps": [
        "Identify that the subdomain is a CNAME to www.mozilla.org hosted at an unregistered domain.",
        "Register the unregistered target domain.",
        "Claim the domain to take over the subdomain.",
        "Visit the subdomain URL as proof of concept."
      ],
      "verification_method": "Accessed the subdomain URL to confirm control. Noted that CAA records prevented issuance of SSL certificate. Provided screenshot showing ability to set large cookies on www.firefox.com to demonstrate potential impact."
    },
    {
      "vulnerable_domain": "www.█████",
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Subdomain takeover via Host Header Injection on the vulnerable subdomain",
      "poc_steps": [
        "Steps to reproduce detailed above (not provided explicitly)"
      ],
      "verification_method": null
    },
    {
      "vulnerable_domain": "help.cloudup.com",
      "service_type": "Desk.com",
      "dns_record_type": "CNAME-based",
      "cname_record": "help.cloudup.com CNAME cloudup.desk.com",
      "takeover_method": "The subdomain help.cloudup.com was pointing via a CNAME record to cloudup.desk.com, which was an expired or canceled Desk.com account. The attacker registered the same subdomain on Desk.com (cloudup.desk.com) and was able to claim the subdomain and serve their own content.",
      "poc_steps": [
        "Checked the CNAME record of help.cloudup.com and found it resolves to cloudup.desk.com",
        "Attempted to create an account on desk.com with the subdomain cloudup.desk.com",
        "Successfully created the account because the original Desk.com account was expired or canceled",
        "Set up a custom page on the newly created Desk.com account",
        "Noted that help.cloudup.com showed an SSL error, likely due to expired certificate, but control over the CNAME was confirmed"
      ],
      "verification_method": "Confirmed control by successfully creating the Desk.com account matching the CNAME target and setting up a page. Screenshots were provided showing the DNS record, the created page, and the SSL error on the original domain."
    },
    {
      "vulnerable_domain": "new.rubyonrails.org",
      "service_type": "GitHub Pages",
      "dns_record_type": "CNAME-based",
      "cname_record": null,
      "takeover_method": "The subdomain new.rubyonrails.org was pointing to an unclaimed GitHub Pages site, allowing the attacker to claim the GitHub Pages repository and serve content on the subdomain.",
      "poc_steps": [
        "Identify that new.rubyonrails.org DNS record points to an unclaimed GitHub Pages domain",
        "Claim the GitHub Pages site under attacker's GitHub account",
        "Add a simple HTML file as proof of concept to the claimed GitHub Pages repository",
        "Access https://new.rubyonrails.org to confirm control"
      ],
      "verification_method": "Accessed https://new.rubyonrails.org and confirmed the attacker's HTML content was served, supported by a screenshot (Screen_Shot_2021-12-16_at_23.12.09.png) showing the takeover."
    },
    {
      "vulnerable_domain": "www.cyberlynx.lu",
      "service_type": "Wix",
      "dns_record_type": "CNAME-based",
      "cname_record": "www.cyberlynx.lu canonical name = www118.wixdns.net. www118.wixdns.net canonical name = balancer.wixdns.net. balancer.wixdns.net canonical name = f7a0737a-balancer.wixdns.net. f7a0737a-balancer.wixdns.net canonical name = td-balancer-dc11-60-102.wixdns.net.",
      "takeover_method": "The subdomain www.cyberlynx.lu was pointing via CNAME records to Wix's CDN infrastructure but was unclaimed by the legitimate owner. An attacker could register and claim this abandoned subdomain on Wix, thereby taking full control of the subdomain and serving arbitrary content.",
      "poc_steps": [
        "Check the DNS records for www.cyberlynx.lu and observe it points to Wix CDN via multiple CNAMEs.",
        "Visit the domain http://site.therealreal.com (example given) which returns 404, indicating the subdomain is unclaimed.",
        "Register the subdomain on Wix by claiming the abandoned subdomain through Wix's domain management process.",
        "Serve arbitrary content on the claimed subdomain."
      ],
      "verification_method": "Verification was done by accessing the domain and observing a 404 error indicating the subdomain was unclaimed. Screenshots were provided showing the DNS CNAME chain pointing to Wix and the unclaimed status. After remediation, a follow-up screenshot confirmed the issue was fixed and the subdomain was no longer vulnerable."
    },
    {
      "vulnerable_domain": "course.oberlo.com",
      "service_type": "kajabi",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Subdomain takeover via kajabi services by exploiting a dangling subdomain pointing to an unclaimed kajabi resource, allowing an attacker to claim the subdomain and serve content.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": null,
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "The subdomain takeover was caused by the server routing requests for unknown subdomains to a fallback static website hosted on the {REDACTED}.18f.gov domain. Because the server proxied requests to the static site host while passing along the original HTTP Host header, it responded as if the unknown subdomain was hosted there, allowing attackers to serve content on those subdomains.",
      "poc_steps": [
        "Send an HTTP request to an unknown subdomain of 18f.gov that resolves to the vulnerable server.",
        "Observe that the server routes the request to the fallback static website at {REDACTED}.18f.gov.",
        "Confirm that the response serves content as if the unknown subdomain is hosted on the static site.",
        "Demonstrate that content can be served on these other domains due to the fallback routing and Host header handling."
      ],
      "verification_method": "Verified by sending HTTP requests to unknown subdomains and confirming that the server responded with content from the {REDACTED}.18f.gov static site, indicating that the fallback routing and Host header forwarding allowed serving content on unauthorized subdomains."
    },
    {
      "vulnerable_domain": "usclsapipma.cv.ford.com",
      "service_type": "Azure",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Registering the Cloud App Virtual Machine in the Azure portal for the target subdomain, thereby gaining full control over the virtual machine and its OS, which allows control over all traffic including HTTP/HTTPS and mail traffic.",
      "poc_steps": [
        "Identify the subdomain usclsapipma.cv.ford.com as pointing to an unclaimed Azure resource.",
        "Register the Cloud App Virtual Machine in the Azure portal corresponding to the subdomain.",
        "Gain full control over the virtual machine and its operating system.",
        "Leverage control to manipulate traffic for HTTP/HTTPS and mail services on the subdomain."
      ],
      "verification_method": "Screenshots provided as attachments (Azure-check-availability.png and dns-proof.png) demonstrating the ability to register the Azure resource and control the subdomain traffic."
    },
    {
      "vulnerable_domain": "support.scan.me",
      "service_type": "Zendesk",
      "dns_record_type": "CNAME-based",
      "cname_record": "support.scan.me's CNAME was pointing to scan.zendesk.com",
      "takeover_method": "The attacker claimed the unused Zendesk subdomain (scan.zendesk.com) because the Zendesk instance was no longer in use, allowing them to serve arbitrary content on support.scan.me which pointed to that CNAME.",
      "poc_steps": [
        "Identify that support.scan.me's CNAME points to scan.zendesk.com",
        "Verify that the Zendesk instance at scan.zendesk.com is no longer in use",
        "Claim the subdomain scan.zendesk.com on Zendesk platform",
        "Deploy arbitrary content on scan.zendesk.com",
        "Access support.scan.me and confirm the content served matches the claimed Zendesk instance"
      ],
      "verification_method": "Accessed support.scan.me URL and confirmed that content controlled by the attacker on scan.zendesk.com was visible, proving control over the subdomain."
    },
    {
      "vulnerable_domain": "genghis-cdn.shopify.io",
      "service_type": "Fastly",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": null,
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": "s3.shopify.com",
      "service_type": "AWS S3",
      "dns_record_type": "CNAME-based",
      "cname_record": "s3.shopify.com. 3599 IN CNAME shopify-assets.s3.amazonaws.com.",
      "takeover_method": "The subdomain s3.shopify.com was pointed via CNAME to an Amazon S3 bucket (shopify-assets.s3.amazonaws.com), but no corresponding S3 bucket was registered. An attacker could create an S3 bucket with the same name and serve content on s3.shopify.com.",
      "poc_steps": [
        "Identify that s3.shopify.com is a CNAME to shopify-assets.s3.amazonaws.com.",
        "Confirm that no S3 bucket named shopify-assets exists under the attacker's control.",
        "Create an Amazon S3 bucket with the name matching the target (shopify-assets).",
        "Configure the bucket to serve static website content.",
        "Upload malicious content (e.g., HTML page) to the bucket.",
        "Access s3.shopify.com and verify that the attacker's content is served."
      ],
      "verification_method": "Accessed s3.shopify.com URL and confirmed that content served was controlled by the attacker, demonstrating the ability to host arbitrary content on the subdomain."
    },
    {
      "vulnerable_domain": "wfmnarptpc.starbucks.com",
      "service_type": "Azure",
      "dns_record_type": "CNAME-based",
      "cname_record": "wfmnarptpc.starbucks.com CNAME s00149tmppcrpt.trafficmanager.net",
      "takeover_method": "The subdomain wfmnarptpc.starbucks.com had a CNAME record pointing to s00149tmppcrpt.trafficmanager.net, a Microsoft Azure Traffic Manager profile that was no longer registered. An attacker could register this Traffic Manager profile in Azure portal, thereby gaining full control over the subdomain's content.",
      "poc_steps": [
        "Identify that wfmnarptpc.starbucks.com has a CNAME record pointing to s00149tmppcrpt.trafficmanager.net",
        "Verify that s00149tmppcrpt.trafficmanager.net is unregistered in Azure",
        "Register the Traffic Manager profile s00149tmppcrpt in Azure portal",
        "Deploy content to the registered Traffic Manager profile",
        "Access http://wfmnarptpc.starbucks.com/poc.html to confirm control over the subdomain"
      ],
      "verification_method": "Accessed the subdomain URL (http://wfmnarptpc.starbucks.com/poc.html) and confirmed that the attacker-controlled content was served, demonstrating full control over the subdomain. Additionally, the dangling CNAME record was verified by checking Azure portal registration status."
    },
    {
      "vulnerable_domain": "fr1.vpn.zomans.com",
      "service_type": "AWS EC2",
      "dns_record_type": "A-record",
      "cname_record": null,
      "takeover_method": "The subdomain fr1.vpn.zomans.com pointed to an AWS EC2 instance IP address (52.47.57.107) that no longer existed. The attacker was able to claim the same IP by launching their own EC2 instance, thereby serving arbitrary content and obtaining TLS certificates for the domain.",
      "poc_steps": [
        "Run 'dig +short fr1.vpn.zomans.com' to resolve the IP address (52.47.57.107).",
        "Launch a new AWS EC2 instance and assign it the IP address 52.47.57.107.",
        "Run 'curl fr1.vpn.zomans.com' to confirm that the attacker's content is served on the domain."
      ],
      "verification_method": "Accessed the domain fr1.vpn.zomans.com via curl and confirmed that the attacker's content (indicated by a custom HTML comment '<!-- hackerone.com/ian -->') was served, proving control over the subdomain."
    },
    {
      "vulnerable_domain": "dev.rbk.money",
      "service_type": "GitHub Pages",
      "dns_record_type": "CNAME-based",
      "cname_record": null,
      "takeover_method": "The DNS record of dev.rbk.money pointed to GitHub, but the domain was not used in any GitHub account, allowing an attacker to bind the subdomain to any repository and take control of it.",
      "poc_steps": [
        "Identify that dev.rbk.money DNS record points to GitHub but is not claimed by any GitHub account",
        "Create or use a GitHub repository",
        "Add dev.rbk.money as a custom domain in the repository's GitHub Pages settings",
        "Deploy content to the repository to serve on dev.rbk.money"
      ],
      "verification_method": "Accessed dev.rbk.money URL and confirmed that content served was from the attacker's GitHub repository, demonstrating control over the subdomain."
    },
    {
      "vulnerable_domain": null,
      "service_type": "AWS EC2",
      "dns_record_type": "A-record",
      "cname_record": null,
      "takeover_method": "The subdomain pointed via an A record to an EC2 instance that was no longer in use, allowing an attacker to host arbitrary content on the subdomain by provisioning a new EC2 instance or otherwise controlling the target resource.",
      "poc_steps": [
        "Visit the URL http://[REDACTED]/[REDACTED].html",
        "View the provided proof of concept content hosted on the subdomain"
      ],
      "verification_method": "Accessed the subdomain URL and confirmed that arbitrary content was being served, demonstrating control over the subdomain and potential bypass of web protections like CORS or redirecting users to malicious pages."
    },
    {
      "vulnerable_domain": "sales.mixmax.com",
      "service_type": "Webflow",
      "dns_record_type": "A-record",
      "cname_record": null,
      "takeover_method": "The subdomain sales.mixmax.com points to a Webflow.io proxy server IP (151.101.16.229) that returns a 404 error, indicating the target resource is unused and potentially available for takeover via Webflow service.",
      "poc_steps": [
        "Identify that sales.mixmax.com resolves to IP 151.101.16.229, a Webflow.io proxy server.",
        "Access sales.mixmax.com and observe a 404 Not Found response.",
        "Infer that the DNS points to an unused Webflow resource, suggesting possible takeover."
      ],
      "verification_method": "Accessed sales.mixmax.com and confirmed it returns a 404 error from the Webflow proxy server, indicating the subdomain is dangling and vulnerable to takeover."
    },
    {
      "vulnerable_domain": null,
      "service_type": "UptimeRobot",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "The subdomain pointed to UptimeRobot and returned a 'not found' error, indicating it was unclaimed. The attacker was able to sign up on UptimeRobot and claim the subdomain without any verification due to UptimeRobot's policy allowing any unclaimed site to be reassigned directly.",
      "poc_steps": [
        "Identify that the subdomain points to UptimeRobot and returns a 'not found' error.",
        "Sign up on UptimeRobot platform.",
        "Claim the unclaimed subdomain on UptimeRobot without any verification."
      ],
      "verification_method": "The attacker successfully claimed the subdomain on UptimeRobot and demonstrated control over it, confirming the takeover. A screenshot was attached (Screenshot_9.png) as evidence."
    },
    {
      "vulnerable_domain": "mail.starbucks.bg",
      "service_type": "icn.bg mail service",
      "dns_record_type": "CNAME-based",
      "cname_record": null,
      "takeover_method": "The subdomain mail.starbucks.bg was pointing to an unclaimed mail hosting service at icn.bg. The attacker claimed the subdomain on icn.bg, configured login credentials via the web panel, and set up a valid email server, effectively hijacking the subdomain's mail service.",
      "poc_steps": [
        "Identify that mail.starbucks.bg points to an unclaimed mail service at icn.bg via DNS records.",
        "Claim the mail.starbucks.bg subdomain on icn.bg by creating a profile.",
        "Configure login credentials through the icn.bg web panel for the claimed subdomain.",
        "Set up a valid email server for mail.starbucks.bg on icn.bg.",
        "Send a test email from an @mail.starbucks.bg email address to demonstrate control."
      ],
      "verification_method": "Sent a successful test email from an @mail.starbucks.bg address using the newly configured mail server, proving control over the subdomain's mail service."
    },
    {
      "vulnerable_domain": "www.marketo.net",
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": null,
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": "email.smule.com",
      "service_type": "SendGrid",
      "dns_record_type": "CNAME-based",
      "cname_record": null,
      "takeover_method": "The subdomain email.smule.com was pointing via a CNAME record to SendGrid, but the service was not configured to claim or use this subdomain, allowing an attacker to register the subdomain in their own SendGrid account and take control of it.",
      "poc_steps": [
        "Navigate to email.smule.com and observe a 404 Not Found error.",
        "Use the 'dig' command to check the CNAME DNS record for email.smule.com.",
        "Confirm that the subdomain points to SendGrid but is unclaimed.",
        "Register or claim the subdomain email.smule.com in a SendGrid account to take over control."
      ],
      "verification_method": "The Smule security team successfully claimed the subdomain email.smule.com in their SendGrid account, marking it as busy and preventing others from claiming it. The reporter attempted to exploit the subdomain takeover after this action and was unable to do so, confirming the vulnerability was resolved."
    },
    {
      "vulnerable_domain": null,
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Subdomain takeover due to a dangling DNS record under mozaws.net, allowing researchers to register the record and host content under the subdomain.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": null,
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": null,
      "poc_steps": [
        "Visit http://[REDACTED]/proof.e7437329-ab61-4f22-a049-df5b3685313a.txt"
      ],
      "verification_method": "Accessed the provided URL to confirm presence of proof file indicating control over the subdomain"
    },
    {
      "vulnerable_domain": "v.zego.com",
      "service_type": "AWS EC2",
      "dns_record_type": "A-record",
      "cname_record": null,
      "takeover_method": "The subdomain v.zego.com pointed to an AWS EC2 instance IP address (52.214.138.192) that no longer existed. The attacker was able to claim and run their own EC2 instance at that IP, thereby serving arbitrary content on the domain and obtaining TLS certificates.",
      "poc_steps": [
        "Run 'dig +short v.zego.com' to confirm the domain resolves to 52.214.138.192",
        "Claim and launch an AWS EC2 instance with the IP address 52.214.138.192",
        "Serve custom content on the EC2 instance for v.zego.com",
        "Run 'curl v.zego.com' to verify the served content (e.g., HTML comment '<!-- hackerone.com/ian -->')"
      ],
      "verification_method": "Accessed the domain v.zego.com via curl and confirmed the attacker's custom content was served, indicating control over the subdomain."
    },
    {
      "vulnerable_domain": "healthyhackathon.khanacademy.org",
      "service_type": "AWS S3",
      "dns_record_type": "CNAME-based",
      "cname_record": null,
      "takeover_method": "The subdomain pointed to an AWS S3 bucket that no longer existed, allowing an attacker to claim the bucket and serve content on the subdomain, effectively taking control of it.",
      "poc_steps": [
        "Identify that healthyhackathon.khanacademy.org points to a non-existent S3 bucket.",
        "Claim the S3 bucket with the same name as the subdomain.",
        "Upload malicious or spoofed content to the bucket.",
        "Access healthyhackathon.khanacademy.org to confirm control over the subdomain."
      ],
      "verification_method": "Screenshots (sub_take1.png and sub_take2.png) were provided showing control over the subdomain; confirmation was done by accessing the domain and verifying the content served from the claimed S3 bucket."
    },
    {
      "vulnerable_domain": "bitstripsforschools",
      "service_type": "UserVoice",
      "dns_record_type": "CNAME-based",
      "cname_record": "bitstripsforschools CNAME entry pointing to an unclaimed UserVoice domain",
      "takeover_method": "The subdomain had a CNAME DNS record pointing to an unclaimed UserVoice domain. Since the product was no longer active, an external party could claim the UserVoice domain and take over the subdomain.",
      "poc_steps": [
        "Identify the subdomain bitstripsforschools with a CNAME record pointing to a UserVoice domain.",
        "Verify that the UserVoice domain is unclaimed and available for registration.",
        "Register or claim the unclaimed UserVoice domain.",
        "Serve content on the claimed UserVoice domain to confirm control over the subdomain."
      ],
      "verification_method": "Confirmed takeover by claiming the unclaimed UserVoice domain pointed to by the CNAME record and serving content, demonstrating control over the subdomain."
    },
    {
      "vulnerable_domain": null,
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Subdomain takeover due to a dangling DNS record under mozaws.net, allowing the researcher to register the record and host content under the subdomain.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": "docs-dev.gitlab.com",
      "service_type": "GitLab Pages",
      "dns_record_type": "CNAME-based",
      "cname_record": "docs-dev.gitlab.com.    300     IN      CNAME   gitlab-com.gitlab.io.",
      "takeover_method": "Adding a custom domain to GitLab Pages without domain verification allows the dangling domain to serve content for 7 days before being disabled, enabling an attacker to take over the subdomain.",
      "poc_steps": [
        "Create a GitLab Pages project (e.g., https://gitlab.com/g15391522/pn1).",
        "Go to Deploy -> Pages in the project settings.",
        "Disable 'Force HTTPS' (requires valid certificates).",
        "Add the target custom domain (e.g., docs-dev.gitlab.com) and click Save.",
        "Access the URL http://docs-dev.gitlab.com/ and observe that content is served."
      ],
      "verification_method": "Performed DNS lookup showing the subdomain as a CNAME to gitlab-com.gitlab.io; accessed the domain URL and observed HTTP 302 redirect followed by HTTP 401 response with GitLab Pages headers and cookies, confirming that the dangling domain serves GitLab Pages content."
    },
    {
      "vulnerable_domain": "█.staging.█.8x8.com",
      "service_type": "AWS EC2",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "An EC2 instance was terminated but the DNS record was not updated or removed, leaving a dangling DNS record that could be taken over.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": "images.crossinstall.com",
      "service_type": "AWS S3",
      "dns_record_type": "CNAME-based",
      "cname_record": "images.crossinstall.com. 300 IN CNAME assets.crossinstall.com.s3.amazonaws.com.",
      "takeover_method": "The subdomain images.crossinstall.com pointed to an AWS S3 bucket that no longer existed, allowing the attacker to create and control the bucket, thereby serving arbitrary content on the domain and obtaining TLS certificates.",
      "poc_steps": [
        "Run 'dig images.crossinstall.com +short' to confirm the CNAME points to an AWS S3 bucket.",
        "Create an AWS S3 bucket named assets.crossinstall.com.s3.amazonaws.com (or the expected bucket name).",
        "Upload custom content to the bucket.",
        "Access 'images.crossinstall.com/index.html' and verify the custom content is served, including an HTML comment with the attacker's username."
      ],
      "verification_method": "Accessed the URL images.crossinstall.com/index.html and confirmed the presence of an HTML comment containing the attacker's username, proving control over the content served on the domain."
    },
    {
      "vulnerable_domain": "podcasts.slack-core.com",
      "service_type": "FeedPress",
      "dns_record_type": "CNAME-based",
      "cname_record": "podcasts.slack-core.com is CNAME'd to redirect.feedpress.me",
      "takeover_method": "The subdomain podcasts.slack-core.com was pointed via a CNAME record to redirect.feedpress.me, a FeedPress-managed domain. The attacker was able to claim or control the target FeedPress resource, allowing takeover of the subdomain.",
      "poc_steps": [
        "Run DNS query for podcasts.slack-core.com using dig",
        "Observe that podcasts.slack-core.com is a CNAME to redirect.feedpress.me",
        "Claim or control the FeedPress resource at redirect.feedpress.me to serve content for the subdomain"
      ],
      "verification_method": "Used dig command to confirm the CNAME record pointing podcasts.slack-core.com to redirect.feedpress.me, indicating the subdomain was dangling and vulnerable to takeover."
    },
    {
      "vulnerable_domain": "partners.ubnt.com",
      "service_type": "AWS CloudFront",
      "dns_record_type": "CNAME-based",
      "cname_record": "partners.ubnt.com. IN CNAME <CloudFront distribution domain>",
      "takeover_method": "The subdomain was pointing via a CNAME DNS record to a CloudFront distribution, but no CloudFront origin was configured with that domain as a custom CNAME. This allowed the attacker to create their own CloudFront distribution claiming the dangling CNAME domain and serve arbitrary content under the vulnerable subdomain.",
      "poc_steps": [
        "Identify subdomain partners.ubnt.com pointing to CloudFront via CNAME but without an associated CloudFront origin.",
        "Create a CloudFront distribution and configure it to use partners.ubnt.com as a custom domain name.",
        "Deploy arbitrary content to the CloudFront distribution, including placing a file under /login.",
        "Access http://partners.ubnt.com/login to verify that the attacker's content is served."
      ],
      "verification_method": "Accessed the vulnerable domain URL (http://partners.ubnt.com/login) and confirmed that the attacker's content was served, demonstrating control over the subdomain. Screenshots were provided as proof of concept."
    },
    {
      "vulnerable_domain": null,
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Subdomain takeover due to a dangling DNS record under mozaws.net, where the DNS record pointed to an unclaimed resource that was registered by the researcher, allowing hosting of arbitrary content under the subdomain.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": "production.s3.rubygems.org",
      "service_type": "Fastly",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "A DNS record pointed the subdomain to Fastly, but no Fastly service was configured for this domain, which could allow subdomain takeover if the domain was not controlled by the original owner.",
      "poc_steps": [
        "Identify DNS record pointing production.s3.rubygems.org to Fastly",
        "Check for Fastly service configuration for the domain",
        "Confirm no Fastly service configured",
        "Verify control over rubygems.org subdomains to prevent takeover"
      ],
      "verification_method": "Confirmed no Fastly service was configured for the subdomain and that the organization controls all subdomains of rubygems.org, preventing takeover."
    },
    {
      "vulnerable_domain": [
        "register.acronis.com",
        "promo.acronis.com",
        "info.acronis.com",
        "promosandbox.acronis.com"
      ],
      "service_type": "Marketo",
      "dns_record_type": "CNAME-based",
      "cname_record": [
        "promo.acronis.com acronis.mktoweb.com",
        "promosandbox.acronis.com acronissandbox2.mktoweb.com",
        "register.acronis.com acronis.mktoweb.com",
        "info.acronis.com mkto-h0084.com"
      ],
      "takeover_method": "The subdomains point to unclaimed Marketo CNAME records (e.g., acronis.mktoweb.com) which return 404 errors indicating the target is not configured. An attacker can claim these unregistered Marketo accounts to serve content on these subdomains, resulting in subdomain takeover.",
      "poc_steps": [
        "Perform nslookup on each vulnerable subdomain to confirm CNAME records pointing to Marketo domains.",
        "Verify that the CNAME target domains (e.g., acronis.mktoweb.com) return 404 Not Found errors.",
        "Confirm with Marketo support that these domains are unclaimed and available.",
        "Claim the unregistered Marketo account corresponding to the CNAME target domain to control the subdomain."
      ],
      "verification_method": "Verified by performing nslookup commands showing CNAME records pointing to Marketo domains returning 404 errors. Marketo technical support confirmed the domains are unclaimed. The 404 response indicates the subdomains can be claimed by anyone, confirming the takeover possibility."
    },
    {
      "vulnerable_domain": null,
      "service_type": "AWS Route53",
      "dns_record_type": "NS-based",
      "cname_record": null,
      "takeover_method": "Registering unclaimed domain names referenced in KOPS project's Route53 NS records allows serving arbitrary DNS records for those domains, enabling DNS takeover by controlling the authoritative nameservers.",
      "poc_steps": [
        "Review lines 129-135 of https://github.com/kubernetes/kops/blob/master/docs/getting_started/aws.md to identify referenced domain names in Route53 NS records.",
        "Attempt to register the unclaimed domain names referenced in the NS records.",
        "Configure DNS servers for the registered domains to serve arbitrary DNS records.",
        "Verify that companies using the original configuration are vulnerable by confirming control over DNS records for those domains."
      ],
      "verification_method": "Proof of domain ownership was demonstrated via screenshot (Image F1180954) showing control over the domain; ability to serve arbitrary DNS records for the domains connected to the NS records confirmed the takeover."
    },
    {
      "vulnerable_domain": "media.vine.co",
      "service_type": "AWS S3",
      "dns_record_type": "CNAME-based",
      "cname_record": "media.vine.co is an alias for vines.s3.amazonaws.com.",
      "takeover_method": "The subdomain media.vine.co pointed via a CNAME DNS record to an AWS S3 bucket (vines.s3.amazonaws.com), but no S3 bucket named media.vine.co existed. Since AWS S3 requires the bucket name to match the CNAME, the attacker was able to create the missing bucket named media.vine.co and serve content on that subdomain, effectively taking control of the subdomain.",
      "poc_steps": [
        "Identify that media.vine.co CNAME points to vines.s3.amazonaws.com",
        "Check that no S3 bucket named media.vine.co exists",
        "Create an AWS S3 bucket named media.vine.co in the appropriate region",
        "Upload content (e.g., a fake login page) to the bucket",
        "Access http://media.vine.co/login to confirm content is served from the attacker's bucket"
      ],
      "verification_method": "Accessed the URL http://media.vine.co/login and confirmed that attacker-controlled content was served from the subdomain, demonstrated by a proof-of-concept login page screenshot attached in the report."
    },
    {
      "vulnerable_domain": "jet.acronis.com",
      "service_type": "Webflow",
      "dns_record_type": "CNAME-based",
      "cname_record": null,
      "takeover_method": "Registering the subdomain jet.acronis.com as a custom domain in a Webflow account by creating a site and adding the subdomain in Project Settings > Hosting, exploiting the fact that the subdomain points to unclaimed Webflow services allowing an attacker to serve content on the subdomain.",
      "poc_steps": [
        "Create a Webflow account",
        "Upgrade to basic paid option to enable custom domain setup",
        "Create a site in Webflow",
        "Go to Project Settings > Hosting",
        "Scroll down to custom domains section and add jet.acronis.com to setup"
      ],
      "verification_method": "Confirmed ownership of the subdomain by adding it to a Webflow project and providing a screenshot from the Webflow account showing the subdomain setup, demonstrating control over jet.acronis.com."
    },
    {
      "vulnerable_domain": "d02-1-ag.productioncontroller.starbucks.com",
      "service_type": "Azure Cloud Service",
      "dns_record_type": "CNAME-based",
      "cname_record": "d02-1-ag.productioncontroller.starbucks.com. NXDOMAIN CNAME 3edbac0a-5c43-428a-b451-a5eb268f888b.cloudapp.net.",
      "takeover_method": "Claimed the subdomain by creating a new Azure Cloud Service with the name matching the dangling CNAME target, allowing hosting of arbitrary content on the vulnerable subdomain.",
      "poc_steps": [
        "Used dig to query DNS records for d02-1-ag.productioncontroller.starbucks.com and found NXDOMAIN status with CNAME pointing to 3edbac0a-5c43-428a-b451-a5eb268f888b.cloudapp.net.",
        "Created a new Azure Cloud Service named 3edbac0a-5c43-428a-b451-a5eb268f888b to match the CNAME target.",
        "Deployed a custom website to the newly created Azure Cloud Service following Azure deployment documentation.",
        "Accessed http://d02-1-ag.productioncontroller.starbucks.com to confirm the uploaded site was served."
      ],
      "verification_method": "Accessed the vulnerable subdomain URL and confirmed the custom uploaded website was served from the Azure Cloud Service, demonstrating control over the subdomain."
    },
    {
      "vulnerable_domain": "fddkim.zomato.com",
      "service_type": "Freshdesk",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "The subdomain fddkim.zomato.com was vulnerable to a 0-day subdomain takeover on Freshdesk due to a dangling DNS entry that allowed an attacker to claim the subdomain on the Freshdesk platform.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": "ws.bimedb.com",
      "service_type": "AWS S3",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "The subdomain ws.bimedb.com pointed to an unclaimed Amazon S3 bucket, allowing an attacker to claim the bucket and serve content on the subdomain, resulting in a subdomain takeover.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": null,
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Subdomain takeover was achieved by registering a dangling DNS record under mozaws.net, allowing the researchers to host content under the subdomain.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": "news-static.semrush.com",
      "service_type": "AWS S3",
      "dns_record_type": "CNAME-based",
      "cname_record": "news-static.semrush.com. 59 IN CNAME s3.amazonaws.com.",
      "takeover_method": "The subdomain was pointed via CNAME to Amazon S3, but no corresponding S3 bucket was registered. An attacker could create an AWS account, claim the bucket named after the subdomain, and serve arbitrary content on news-static.semrush.com.",
      "poc_steps": [
        "Open AWS account",
        "Create S3 bucket named news-static.semrush.com",
        "Upload a proof-of-concept HTML file (poc.html) to the bucket"
      ],
      "verification_method": "Browsers (Google Chrome v62.0.3202.94 and Firefox ESR v52.5.0) were used to access the subdomain URL hosting the uploaded POC file, confirming that the attacker-controlled content was served from news-static.semrush.com."
    },
    {
      "vulnerable_domain": "engineering.zomato.com",
      "service_type": "Tumblr",
      "dns_record_type": "CNAME-based",
      "cname_record": "engineering.zomato.com canonical name = domains.tumblr.com.",
      "takeover_method": "The subdomain engineering.zomato.com was pointing via a CNAME DNS record to domains.tumblr.com, an external service. Since the DNS entry was still present but the service was not claimed or controlled by the target organization, an attacker could claim the target domain on Tumblr and serve content, resulting in a subdomain takeover.",
      "poc_steps": [
        "Performed nslookup on engineering.zomato.com",
        "Observed that engineering.zomato.com is a CNAME to domains.tumblr.com",
        "Noted that the DNS entry pointed to an external service (Tumblr) that could be claimed by anyone"
      ],
      "verification_method": "Used nslookup command to confirm that engineering.zomato.com resolves as a CNAME to domains.tumblr.com with IP addresses 66.6.42.22 and 66.6.43.22, indicating the subdomain was pointing to Tumblr and vulnerable to takeover."
    },
    {
      "vulnerable_domain": "18f.domains.api.data.gov",
      "service_type": "AWS Cloudfront",
      "dns_record_type": "CNAME-based",
      "cname_record": "18f.domains.api.data.gov canonical name = dn9rrjaiux2m0.cloudfront.net.",
      "takeover_method": "The subdomain was pointing via a CNAME record to an AWS Cloudfront CDN endpoint that was no longer claimed by the original owner. The attacker created a new Cloudfront distribution and designated the vulnerable subdomain as a custom hostname, thereby taking control of the subdomain.",
      "poc_steps": [
        "Perform nslookup on 18f.domains.api.data.gov to confirm it points to dn9rrjaiux2m0.cloudfront.net",
        "Observe that the Cloudfront endpoint dn9rrjaiux2m0.cloudfront.net was unclaimed, resulting in an AWS Cloudfront error page when visiting the subdomain",
        "Create a new Amazon Cloudfront CDN endpoint with an attacker-controlled origin server",
        "Assign 18f.domains.api.data.gov as a custom hostname to the new Cloudfront distribution",
        "Access the subdomain to confirm control and content serving from the attacker-controlled origin"
      ],
      "verification_method": "Accessed the vulnerable subdomain URL and observed the AWS Cloudfront error page indicating the original Cloudfront distribution was unclaimed. After takeover, accessed the subdomain again and confirmed that the attacker-controlled Cloudfront distribution was serving content, as shown in provided screenshots."
    },
    {
      "vulnerable_domain": null,
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Subdomain takeover due to a dangling DNS record under mozaws.net, where the DNS record pointed to an unclaimed resource that was registered by the researchers, allowing them to host content under the subdomain.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": "addons-preview-cdn.mozilla.net",
      "service_type": "Fastly",
      "dns_record_type": "CNAME-based",
      "cname_record": "addons-preview-cdn.mozilla.net CNAME addons.allizom.org",
      "takeover_method": "The subdomain addons-preview-cdn.mozilla.net pointed via a CNAME record to addons.allizom.org, which resolves within Fastly's service. Since addons-preview-cdn.mozilla.net was not registered in Fastly, the attacker was able to claim this domain in Fastly and serve custom content on it.",
      "poc_steps": [
        "Identify that addons-preview-cdn.mozilla.net CNAME resolves to addons.allizom.org within Fastly",
        "Observe Fastly error 'unknown domain' indicating the domain is unregistered",
        "Register addons-preview-cdn.mozilla.net domain in Fastly",
        "Serve custom content on addons-preview-cdn.mozilla.net",
        "Access http://addons-preview-cdn.mozilla.net/haveanicetakeover-poc.html to confirm custom content"
      ],
      "verification_method": "Accessed the URL http://addons-preview-cdn.mozilla.net/haveanicetakeover-poc.html and confirmed that custom content was served, supported by a screenshot showing the custom content on the domain."
    },
    {
      "vulnerable_domain": "engineering.udemy.com",
      "service_type": "ghost.io",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Attacker was able to serve arbitrary content on the engineering.udemy.com domain by exploiting a subdomain takeover vulnerability related to ghost.io hosting platform.",
      "poc_steps": null,
      "verification_method": "Screenshots were provided as evidence (Screenshot_at_Jun_18_18-39-58.png, Screenshot_at_Jun_18_18-48-17.png, Screenshot_at_Jun_18_19-03-23.png) demonstrating the ability to serve content on the subdomain."
    },
    {
      "vulnerable_domain": "support.trendrr.tv",
      "service_type": "Zendesk",
      "dns_record_type": "CNAME-based",
      "cname_record": "support.trendrr.tv is an alias for trendrr.zendesk.com",
      "takeover_method": "The subdomain support.trendrr.tv is a CNAME alias pointing to trendrr.zendesk.com, but the Zendesk help desk for this subdomain was not configured or was removed, leaving the subdomain dangling and available for takeover by registering a new Zendesk account with that subdomain.",
      "poc_steps": [
        "Visited support.trendrr.tv and observed the message 'No help desk at support.trendrr.tv' indicating no help desk configured.",
        "Confirmed that support.trendrr.tv is a CNAME alias to trendrr.zendesk.com.",
        "Accessed Zendesk signup page to claim the subdomain once it expires or is unclaimed.",
        "Claimed the subdomain on Zendesk to gain full control over support.trendrr.tv.",
        "Verified control by navigating to support.trendrr.tv and confirming redirection to the attacker's Zendesk domain."
      ],
      "verification_method": "Screenshots were provided showing the 'No help desk at support.trendrr.tv' message, proof of CNAME alias to trendrr.zendesk.com, and successful takeover by accessing the subdomain which redirected to the attacker's Zendesk instance."
    },
    {
      "vulnerable_domain": "info.hacker.one",
      "service_type": "UnbouncePages App",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Bypassing the previous fix from Unbounce team on the subdomain info.hacker.one by exploiting a new vulnerable endpoint and parameter combination in the UnbouncePages App, allowing takeover of the subdomain.",
      "poc_steps": [
        "Review previous fix from Unbounce team at https://hackerone.com/reports/217358",
        "Identify new vulnerable endpoint and parameter combination in UnbouncePages App",
        "Exploit this combination to takeover the subdomain info.hacker.one"
      ],
      "verification_method": "Confirmed takeover by demonstrating control over the subdomain info.hacker.one, including screenshots attached (Captura_de_pantalla_2017-04-10_a_las_14.06.37.png and Captura_de_pantalla_2017-04-10_a_las_14.29.27.png) showing the vulnerability and takeover."
    },
    {
      "vulnerable_domain": null,
      "service_type": null,
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "Subdomain takeover due to a dangling DNS record allowing registration of the target record and hosting content under the subdomain.",
      "poc_steps": null,
      "verification_method": null
    },
    {
      "vulnerable_domain": "support.urbandictionary.com",
      "service_type": "Zendesk",
      "dns_record_type": null,
      "cname_record": null,
      "takeover_method": "The subdomain support.urbandictionary.com pointed to Zendesk but had no help desk configured, resulting in a dangling subdomain that could be claimed by registering a new Zendesk account and setting up the subdomain, allowing an attacker to take control.",
      "poc_steps": [
        "Visit http://support.urbandictionary.com/",
        "Observe the message: 'No help desk at support.urbandictionary.com. There is no help desk configured at this address.'",
        "Go to http://www.zendesk.com/signup/",
        "Register a new Zendesk account",
        "Claim the subdomain support.urbandictionary.com by setting it up in Zendesk"
      ],
      "verification_method": "Accessed the subdomain URL and observed the default Zendesk message indicating no help desk was configured, confirming the subdomain was unclaimed and vulnerable to takeover. A screenshot was provided as evidence."
    },
    {
      "vulnerable_domain": "happymondays.starbucks.com",
      "service_type": "AWS S3",
      "dns_record_type": "CNAME-based",
      "cname_record": null,
      "takeover_method": "The subdomain pointed via a DNS CNAME record to a non-used AWS S3 bucket, allowing an attacker to create the bucket and serve arbitrary content on the subdomain, including obtaining SSL certificates via Let's Encrypt through meta/file verification.",
      "poc_steps": null,
      "verification_method": "Screenshots were provided showing control over the subdomain content; verification included demonstrating the ability to publish arbitrary content on the domain and the potential to fetch httpOnly cookies, as well as the ability to obtain SSL certificates for the domain."
    },
    {
      "vulnerable_domain": "ping.ubnt.com",
      "service_type": "Amazon Cloudfront",
      "dns_record_type": "CNAME-based",
      "cname_record": null,
      "takeover_method": "The subdomain ping.ubnt.com was pointing to Amazon Cloudfront CDN, but the hostname was not registered there anymore, allowing full takeover by serving content from an attacker-controlled webserver over HTTP and HTTPS.",
      "poc_steps": [
        "Identify that ping.ubnt.com CNAME points to Amazon Cloudfront but is unregistered in Cloudfront.",
        "Configure own webserver to serve content for ping.ubnt.com.",
        "Serve content over HTTP and HTTPS for ping.ubnt.com.",
        "Leverage shared session cookie 'UBIC_AUTH' with domain attribute '.ubnt.com' to capture victim's session cookie when victim visits ping.ubnt.com.",
        "Optionally obtain a valid SSL certificate for ping.ubnt.com using automated domain verification (e.g., certbot with Let's Encrypt) to ensure secure cookie transmission."
      ],
      "verification_method": "Confirmed takeover by serving attacker-controlled content on ping.ubnt.com over HTTP and HTTPS, demonstrating ability to receive requests and capture the 'UBIC_AUTH' session cookie shared across *.ubnt.com subdomains."
    }
  ],
  "generated_at": "2025-09-04T13:15:32.563150"
}
